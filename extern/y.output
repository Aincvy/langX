   0  $accept : program $end

   1  program : statement_list

   2  statement_list : statement_list statement
   3                 |

   4  statement : ';'
   5            | declar_stmt
   6            | con_ctl_stmt
   7            | simple_stmt ';'

   8  declar_stmt : func_declar_stmt
   9              | var_declar_stmt

  10  func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}'

  11  param_list :
  12             | '(' parameter ')'

  13  parameter : IDENTIFIER
  14            | parameter ',' IDENTIFIER
  15            |

  16  expr_list : expr_list statement
  17            |

  18  var_declar_stmt : id_expr ';'
  19                  | id_expr ',' var_declar_stmt

  20  con_ctl_stmt : selection_stmt
  21               | loop_stmt

  22  selection_stmt : IF '(' logic_stmt ')' block
  23                 | IF '(' logic_stmt ')' block ELSE block
  24                 | SWITCH '(' id_expr ')' '{' case_stmt_list '}'

  25  case_stmt_list : case_stmt

  26  case_stmt : CASE double_expr ':' single_assign_stmt ';'

  27  case_stmt_block : single_assign_stmt ';'

  28  loop_stmt : WHILE '(' logic_stmt ')' block
  29            | FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block

  30  for_1_stmt :
  31             | assign_stmt
  32             | var_declar_stmt
  33             | self_inc_dec_stmt

  34  simple_stmt : assign_stmt
  35              | call_statement
  36              | DELETE IDENTIFIER ';'
  37              | interrupt_stmt

  38  interrupt_stmt : BREAK
  39                 | RETURN
  40                 | RETURN assign_stmt_value

  41  call_statement : IDENTIFIER '(' args_list ')'

  42  args_list :
  43            | args_expr

  44  args_expr : args_expr_collection
  45            | args_expr ',' args_expr_collection

  46  args_expr_collection : t_bool_expr
  47                       | double_expr
  48                       | id_expr
  49                       | string_expr
  50                       | uminus_expr
  51                       | call_statement
  52                       | arithmetic_stmt

  53  block : '{' expr_list '}'
  54        | statement

  55  double_or_ps_expr : double_expr
  56                    | parentheses_stmt

  57  parentheses_stmt : '(' assign_stmt_value_eq ')'

  58  arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor
  59                  | arithmetic_stmt_factor '-' arithmetic_stmt_factor
  60                  | arithmetic_stmt_factor '*' arithmetic_stmt_factor
  61                  | arithmetic_stmt_factor '/' arithmetic_stmt_factor

  62  arithmetic_stmt_factor : assign_stmt_value_eq
  63                         | string_expr
  64                         | arithmetic_stmt
  65                         | '(' arithmetic_stmt ')'

  66  id_expr : IDENTIFIER

  67  t_bool_expr : TBOOL

  68  double_expr : TDOUBLE

  69  uminus_expr : '-' double_or_ps_expr

  70  string_expr : TSTRING

  71  bool_param_expr : assign_stmt_value_eq
  72                  | arithmetic_stmt

  73  logic_stmt : bool_param_expr
  74             | bool_param_expr '>' bool_param_expr
  75             | bool_param_expr '<' bool_param_expr
  76             | bool_param_expr LE_OP bool_param_expr
  77             | bool_param_expr GE_OP bool_param_expr
  78             | bool_param_expr EQ_OP bool_param_expr
  79             | bool_param_expr NE_OP bool_param_expr
  80             | logic_stmt AND_OP logic_stmt
  81             | logic_stmt OR_OP logic_stmt

  82  self_inc_dec_stmt : INC_OP id_expr
  83                    | DEC_OP id_expr
  84                    | id_expr INC_OP
  85                    | id_expr DEC_OP

  86  assign_stmt_value : double_expr
  87                    | uminus_expr
  88                    | t_bool_expr
  89                    | arithmetic_stmt
  90                    | call_statement
  91                    | id_expr
  92                    | string_expr
  93                    | self_inc_dec_stmt

  94  assign_stmt_value_eq : double_expr
  95                       | uminus_expr
  96                       | call_statement
  97                       | id_expr
  98                       | self_inc_dec_stmt

  99  single_assign_stmt : id_expr '=' assign_stmt_value
 100                     | id_expr '=' single_assign_stmt

 101  assign_stmt : single_assign_stmt
 102              | id_expr ADD_EQ assign_stmt_value_eq
 103              | id_expr SUB_EQ assign_stmt_value_eq
 104              | id_expr MUL_EQ assign_stmt_value_eq
 105              | id_expr DIV_EQ assign_stmt_value_eq

state 0
	$accept : . program $end  (0)
	statement_list : .  (3)

	.  reduce 3

	program  goto 1
	statement_list  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : statement_list .  (1)
	statement_list : statement_list . statement  (2)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	$end  reduce 1

	statement  goto 12
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 3
	func_declar_stmt : IDENTIFIER . FUNC_OP param_list '{' expr_list '}'  (10)
	call_statement : IDENTIFIER . '(' args_list ')'  (41)
	id_expr : IDENTIFIER .  (66)

	FUNC_OP  shift 25
	'('  shift 26
	ADD_EQ  reduce 66
	SUB_EQ  reduce 66
	MUL_EQ  reduce 66
	DIV_EQ  reduce 66
	','  reduce 66
	'='  reduce 66
	';'  reduce 66


state 4
	selection_stmt : IF . '(' logic_stmt ')' block  (22)
	selection_stmt : IF . '(' logic_stmt ')' block ELSE block  (23)

	'('  shift 27
	.  error


state 5
	loop_stmt : WHILE . '(' logic_stmt ')' block  (28)

	'('  shift 28
	.  error


state 6
	loop_stmt : FOR . '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (29)

	'('  shift 29
	.  error


state 7
	simple_stmt : DELETE . IDENTIFIER ';'  (36)

	IDENTIFIER  shift 30
	.  error


state 8
	interrupt_stmt : BREAK .  (38)

	.  reduce 38


state 9
	interrupt_stmt : RETURN .  (39)
	interrupt_stmt : RETURN . assign_stmt_value  (40)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	';'  reduce 39

	arithmetic_stmt  goto 39
	self_inc_dec_stmt  goto 40
	call_statement  goto 41
	assign_stmt_value_eq  goto 42
	assign_stmt_value  goto 43
	id_expr  goto 44
	t_bool_expr  goto 45
	double_expr  goto 46
	uminus_expr  goto 47
	string_expr  goto 48
	arithmetic_stmt_factor  goto 49


state 10
	selection_stmt : SWITCH . '(' id_expr ')' '{' case_stmt_list '}'  (24)

	'('  shift 50
	.  error


state 11
	statement : ';' .  (4)

	.  reduce 4


state 12
	statement_list : statement_list statement .  (2)

	.  reduce 2


state 13
	statement : declar_stmt .  (5)

	.  reduce 5


state 14
	statement : con_ctl_stmt .  (6)

	.  reduce 6


state 15
	statement : simple_stmt . ';'  (7)

	';'  shift 51
	.  error


state 16
	declar_stmt : func_declar_stmt .  (8)

	.  reduce 8


state 17
	declar_stmt : var_declar_stmt .  (9)

	.  reduce 9


state 18
	con_ctl_stmt : selection_stmt .  (20)

	.  reduce 20


state 19
	con_ctl_stmt : loop_stmt .  (21)

	.  reduce 21


state 20
	simple_stmt : assign_stmt .  (34)

	.  reduce 34


state 21
	simple_stmt : call_statement .  (35)

	.  reduce 35


state 22
	assign_stmt : single_assign_stmt .  (101)

	.  reduce 101


state 23
	simple_stmt : interrupt_stmt .  (37)

	.  reduce 37


state 24
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (99)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (100)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (102)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (103)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (104)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (105)

	ADD_EQ  shift 52
	SUB_EQ  shift 53
	MUL_EQ  shift 54
	DIV_EQ  shift 55
	','  shift 56
	'='  shift 57
	';'  shift 58
	.  error


state 25
	func_declar_stmt : IDENTIFIER FUNC_OP . param_list '{' expr_list '}'  (10)
	param_list : .  (11)

	'('  shift 59
	'{'  reduce 11

	param_list  goto 60


state 26
	call_statement : IDENTIFIER '(' . args_list ')'  (41)
	args_list : .  (42)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	')'  reduce 42

	arithmetic_stmt  goto 61
	self_inc_dec_stmt  goto 62
	call_statement  goto 63
	args_expr_collection  goto 64
	assign_stmt_value_eq  goto 42
	id_expr  goto 65
	t_bool_expr  goto 66
	double_expr  goto 67
	uminus_expr  goto 68
	string_expr  goto 69
	arithmetic_stmt_factor  goto 49
	args_list  goto 70
	args_expr  goto 71


state 27
	selection_stmt : IF '(' . logic_stmt ')' block  (22)
	selection_stmt : IF '(' . logic_stmt ')' block ELSE block  (23)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 72
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 28
	loop_stmt : WHILE '(' . logic_stmt ')' block  (28)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 81
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 29
	loop_stmt : FOR '(' . for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (29)
	for_1_stmt : .  (30)

	IDENTIFIER  shift 82
	INC_OP  shift 35
	DEC_OP  shift 36
	';'  reduce 30

	var_declar_stmt  goto 83
	for_1_stmt  goto 84
	assign_stmt  goto 85
	self_inc_dec_stmt  goto 86
	single_assign_stmt  goto 22
	id_expr  goto 87


state 30
	simple_stmt : DELETE IDENTIFIER . ';'  (36)

	';'  shift 88
	.  error


state 31
	double_expr : TDOUBLE .  (68)

	.  reduce 68


state 32
	t_bool_expr : TBOOL .  (67)

	.  reduce 67


state 33
	call_statement : IDENTIFIER . '(' args_list ')'  (41)
	id_expr : IDENTIFIER .  (66)

	'('  shift 26
	AND_OP  reduce 66
	OR_OP  reduce 66
	LE_OP  reduce 66
	GE_OP  reduce 66
	EQ_OP  reduce 66
	NE_OP  reduce 66
	INC_OP  reduce 66
	DEC_OP  reduce 66
	','  reduce 66
	'='  reduce 66
	'>'  reduce 66
	'<'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	';'  reduce 66
	')'  reduce 66


state 34
	string_expr : TSTRING .  (70)

	.  reduce 70


state 35
	self_inc_dec_stmt : INC_OP . id_expr  (82)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 89


state 36
	self_inc_dec_stmt : DEC_OP . id_expr  (83)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 90


state 37
	uminus_expr : '-' . double_or_ps_expr  (69)

	TDOUBLE  shift 31
	'('  shift 91
	.  error

	double_or_ps_expr  goto 92
	parentheses_stmt  goto 93
	double_expr  goto 94


state 38
	arithmetic_stmt_factor : '(' . arithmetic_stmt ')'  (65)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 95
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 39
	arithmetic_stmt_factor : arithmetic_stmt .  (64)
	assign_stmt_value : arithmetic_stmt .  (89)

	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	';'  reduce 89
	')'  reduce 89


state 40
	assign_stmt_value : self_inc_dec_stmt .  (93)
	assign_stmt_value_eq : self_inc_dec_stmt .  (98)

	'+'  reduce 98
	'-'  reduce 98
	'*'  reduce 98
	'/'  reduce 98
	';'  reduce 93
	')'  reduce 93


state 41
	assign_stmt_value : call_statement .  (90)
	assign_stmt_value_eq : call_statement .  (96)

	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	';'  reduce 90
	')'  reduce 90


state 42
	arithmetic_stmt_factor : assign_stmt_value_eq .  (62)

	.  reduce 62


state 43
	interrupt_stmt : RETURN assign_stmt_value .  (40)

	.  reduce 40


state 44
	self_inc_dec_stmt : id_expr . INC_OP  (84)
	self_inc_dec_stmt : id_expr . DEC_OP  (85)
	assign_stmt_value : id_expr .  (91)
	assign_stmt_value_eq : id_expr .  (97)

	INC_OP  shift 96
	DEC_OP  shift 97
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	';'  reduce 91


state 45
	assign_stmt_value : t_bool_expr .  (88)

	.  reduce 88


state 46
	assign_stmt_value : double_expr .  (86)
	assign_stmt_value_eq : double_expr .  (94)

	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94
	';'  reduce 86
	')'  reduce 86


state 47
	assign_stmt_value : uminus_expr .  (87)
	assign_stmt_value_eq : uminus_expr .  (95)

	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	';'  reduce 87
	')'  reduce 87


state 48
	arithmetic_stmt_factor : string_expr .  (63)
	assign_stmt_value : string_expr .  (92)

	'+'  reduce 63
	'-'  reduce 63
	'*'  reduce 63
	'/'  reduce 63
	';'  reduce 92
	')'  reduce 92


state 49
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (58)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (59)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (61)

	'+'  shift 98
	'-'  shift 99
	'*'  shift 100
	'/'  shift 101
	.  error


state 50
	selection_stmt : SWITCH '(' . id_expr ')' '{' case_stmt_list '}'  (24)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 102


state 51
	statement : simple_stmt ';' .  (7)

	.  reduce 7


state 52
	assign_stmt : id_expr ADD_EQ . assign_stmt_value_eq  (102)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 103
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 53
	assign_stmt : id_expr SUB_EQ . assign_stmt_value_eq  (103)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 104
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 54
	assign_stmt : id_expr MUL_EQ . assign_stmt_value_eq  (104)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 105
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 55
	assign_stmt : id_expr DIV_EQ . assign_stmt_value_eq  (105)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 106
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 56
	var_declar_stmt : id_expr ',' . var_declar_stmt  (19)

	IDENTIFIER  shift 82
	.  error

	var_declar_stmt  goto 107
	id_expr  goto 108


state 57
	single_assign_stmt : id_expr '=' . assign_stmt_value  (99)
	single_assign_stmt : id_expr '=' . single_assign_stmt  (100)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 39
	self_inc_dec_stmt  goto 40
	call_statement  goto 41
	assign_stmt_value_eq  goto 42
	assign_stmt_value  goto 109
	single_assign_stmt  goto 110
	id_expr  goto 111
	t_bool_expr  goto 45
	double_expr  goto 46
	uminus_expr  goto 47
	string_expr  goto 48
	arithmetic_stmt_factor  goto 49


state 58
	var_declar_stmt : id_expr ';' .  (18)

	.  reduce 18


state 59
	param_list : '(' . parameter ')'  (12)
	parameter : .  (15)

	IDENTIFIER  shift 112
	','  reduce 15
	')'  reduce 15

	parameter  goto 113


state 60
	func_declar_stmt : IDENTIFIER FUNC_OP param_list . '{' expr_list '}'  (10)

	'{'  shift 114
	.  error


state 61
	args_expr_collection : arithmetic_stmt .  (52)
	arithmetic_stmt_factor : arithmetic_stmt .  (64)

	','  reduce 52
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	')'  reduce 52


state 62
	assign_stmt_value_eq : self_inc_dec_stmt .  (98)

	.  reduce 98


state 63
	args_expr_collection : call_statement .  (51)
	assign_stmt_value_eq : call_statement .  (96)

	','  reduce 51
	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	')'  reduce 51


state 64
	args_expr : args_expr_collection .  (44)

	.  reduce 44


state 65
	args_expr_collection : id_expr .  (48)
	self_inc_dec_stmt : id_expr . INC_OP  (84)
	self_inc_dec_stmt : id_expr . DEC_OP  (85)
	assign_stmt_value_eq : id_expr .  (97)

	INC_OP  shift 96
	DEC_OP  shift 97
	','  reduce 48
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	')'  reduce 48


state 66
	args_expr_collection : t_bool_expr .  (46)

	.  reduce 46


state 67
	args_expr_collection : double_expr .  (47)
	assign_stmt_value_eq : double_expr .  (94)

	','  reduce 47
	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94
	')'  reduce 47


state 68
	args_expr_collection : uminus_expr .  (50)
	assign_stmt_value_eq : uminus_expr .  (95)

	','  reduce 50
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	')'  reduce 50


state 69
	args_expr_collection : string_expr .  (49)
	arithmetic_stmt_factor : string_expr .  (63)

	','  reduce 49
	'+'  reduce 63
	'-'  reduce 63
	'*'  reduce 63
	'/'  reduce 63
	')'  reduce 49


state 70
	call_statement : IDENTIFIER '(' args_list . ')'  (41)

	')'  shift 115
	.  error


state 71
	args_list : args_expr .  (43)
	args_expr : args_expr . ',' args_expr_collection  (45)

	','  shift 116
	')'  reduce 43


state 72
	selection_stmt : IF '(' logic_stmt . ')' block  (22)
	selection_stmt : IF '(' logic_stmt . ')' block ELSE block  (23)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (80)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (81)

	AND_OP  shift 117
	OR_OP  shift 118
	')'  shift 119
	.  error


state 73
	arithmetic_stmt_factor : arithmetic_stmt .  (64)
	bool_param_expr : arithmetic_stmt .  (72)

	AND_OP  reduce 72
	OR_OP  reduce 72
	LE_OP  reduce 72
	GE_OP  reduce 72
	EQ_OP  reduce 72
	NE_OP  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	';'  reduce 72
	')'  reduce 72


state 74
	assign_stmt_value_eq : call_statement .  (96)

	.  reduce 96


state 75
	arithmetic_stmt_factor : assign_stmt_value_eq .  (62)
	bool_param_expr : assign_stmt_value_eq .  (71)

	AND_OP  reduce 71
	OR_OP  reduce 71
	LE_OP  reduce 71
	GE_OP  reduce 71
	EQ_OP  reduce 71
	NE_OP  reduce 71
	'>'  reduce 71
	'<'  reduce 71
	'+'  reduce 62
	'-'  reduce 62
	'*'  reduce 62
	'/'  reduce 62
	';'  reduce 71
	')'  reduce 71


state 76
	logic_stmt : bool_param_expr .  (73)
	logic_stmt : bool_param_expr . '>' bool_param_expr  (74)
	logic_stmt : bool_param_expr . '<' bool_param_expr  (75)
	logic_stmt : bool_param_expr . LE_OP bool_param_expr  (76)
	logic_stmt : bool_param_expr . GE_OP bool_param_expr  (77)
	logic_stmt : bool_param_expr . EQ_OP bool_param_expr  (78)
	logic_stmt : bool_param_expr . NE_OP bool_param_expr  (79)

	LE_OP  shift 120
	GE_OP  shift 121
	EQ_OP  shift 122
	NE_OP  shift 123
	'>'  shift 124
	'<'  shift 125
	AND_OP  reduce 73
	OR_OP  reduce 73
	';'  reduce 73
	')'  reduce 73


state 77
	self_inc_dec_stmt : id_expr . INC_OP  (84)
	self_inc_dec_stmt : id_expr . DEC_OP  (85)
	assign_stmt_value_eq : id_expr .  (97)

	INC_OP  shift 96
	DEC_OP  shift 97
	AND_OP  reduce 97
	OR_OP  reduce 97
	LE_OP  reduce 97
	GE_OP  reduce 97
	EQ_OP  reduce 97
	NE_OP  reduce 97
	','  reduce 97
	'>'  reduce 97
	'<'  reduce 97
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	';'  reduce 97
	')'  reduce 97


state 78
	assign_stmt_value_eq : double_expr .  (94)

	.  reduce 94


state 79
	assign_stmt_value_eq : uminus_expr .  (95)

	.  reduce 95


state 80
	arithmetic_stmt_factor : string_expr .  (63)

	.  reduce 63


state 81
	loop_stmt : WHILE '(' logic_stmt . ')' block  (28)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (80)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (81)

	AND_OP  shift 117
	OR_OP  shift 118
	')'  shift 126
	.  error


state 82
	id_expr : IDENTIFIER .  (66)

	.  reduce 66


state 83
	for_1_stmt : var_declar_stmt .  (32)

	.  reduce 32


state 84
	loop_stmt : FOR '(' for_1_stmt . ';' logic_stmt ';' for_1_stmt ')' block  (29)

	';'  shift 127
	.  error


state 85
	for_1_stmt : assign_stmt .  (31)

	.  reduce 31


state 86
	for_1_stmt : self_inc_dec_stmt .  (33)

	.  reduce 33


state 87
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)
	self_inc_dec_stmt : id_expr . INC_OP  (84)
	self_inc_dec_stmt : id_expr . DEC_OP  (85)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (99)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (100)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (102)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (103)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (104)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (105)

	INC_OP  shift 96
	DEC_OP  shift 97
	ADD_EQ  shift 52
	SUB_EQ  shift 53
	MUL_EQ  shift 54
	DIV_EQ  shift 55
	','  shift 56
	'='  shift 57
	';'  shift 58
	.  error


state 88
	simple_stmt : DELETE IDENTIFIER ';' .  (36)

	.  reduce 36


state 89
	self_inc_dec_stmt : INC_OP id_expr .  (82)

	.  reduce 82


state 90
	self_inc_dec_stmt : DEC_OP id_expr .  (83)

	.  reduce 83


state 91
	parentheses_stmt : '(' . assign_stmt_value_eq ')'  (57)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 128
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 92
	uminus_expr : '-' double_or_ps_expr .  (69)

	.  reduce 69


state 93
	double_or_ps_expr : parentheses_stmt .  (56)

	.  reduce 56


state 94
	double_or_ps_expr : double_expr .  (55)

	.  reduce 55


state 95
	arithmetic_stmt_factor : arithmetic_stmt .  (64)
	arithmetic_stmt_factor : '(' arithmetic_stmt . ')'  (65)

	')'  shift 129
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64


state 96
	self_inc_dec_stmt : id_expr INC_OP .  (84)

	.  reduce 84


state 97
	self_inc_dec_stmt : id_expr DEC_OP .  (85)

	.  reduce 85


state 98
	arithmetic_stmt : arithmetic_stmt_factor '+' . arithmetic_stmt_factor  (58)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 131


state 99
	arithmetic_stmt : arithmetic_stmt_factor '-' . arithmetic_stmt_factor  (59)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 132


state 100
	arithmetic_stmt : arithmetic_stmt_factor '*' . arithmetic_stmt_factor  (60)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 133


state 101
	arithmetic_stmt : arithmetic_stmt_factor '/' . arithmetic_stmt_factor  (61)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 134


state 102
	selection_stmt : SWITCH '(' id_expr . ')' '{' case_stmt_list '}'  (24)

	')'  shift 135
	.  error


state 103
	assign_stmt : id_expr ADD_EQ assign_stmt_value_eq .  (102)

	.  reduce 102


state 104
	assign_stmt : id_expr SUB_EQ assign_stmt_value_eq .  (103)

	.  reduce 103


state 105
	assign_stmt : id_expr MUL_EQ assign_stmt_value_eq .  (104)

	.  reduce 104


state 106
	assign_stmt : id_expr DIV_EQ assign_stmt_value_eq .  (105)

	.  reduce 105


state 107
	var_declar_stmt : id_expr ',' var_declar_stmt .  (19)

	.  reduce 19


state 108
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)

	','  shift 56
	';'  shift 58
	.  error


state 109
	single_assign_stmt : id_expr '=' assign_stmt_value .  (99)

	.  reduce 99


state 110
	single_assign_stmt : id_expr '=' single_assign_stmt .  (100)

	.  reduce 100


state 111
	self_inc_dec_stmt : id_expr . INC_OP  (84)
	self_inc_dec_stmt : id_expr . DEC_OP  (85)
	assign_stmt_value : id_expr .  (91)
	assign_stmt_value_eq : id_expr .  (97)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (99)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (100)

	INC_OP  shift 96
	DEC_OP  shift 97
	'='  shift 57
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	';'  reduce 91
	')'  reduce 91


state 112
	parameter : IDENTIFIER .  (13)

	.  reduce 13


state 113
	param_list : '(' parameter . ')'  (12)
	parameter : parameter . ',' IDENTIFIER  (14)

	','  shift 136
	')'  shift 137
	.  error


state 114
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' . expr_list '}'  (10)
	expr_list : .  (17)

	.  reduce 17

	expr_list  goto 138


state 115
	call_statement : IDENTIFIER '(' args_list ')' .  (41)

	.  reduce 41


state 116
	args_expr : args_expr ',' . args_expr_collection  (45)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 61
	self_inc_dec_stmt  goto 62
	call_statement  goto 63
	args_expr_collection  goto 139
	assign_stmt_value_eq  goto 42
	id_expr  goto 65
	t_bool_expr  goto 66
	double_expr  goto 67
	uminus_expr  goto 68
	string_expr  goto 69
	arithmetic_stmt_factor  goto 49


state 117
	logic_stmt : logic_stmt AND_OP . logic_stmt  (80)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 140
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 118
	logic_stmt : logic_stmt OR_OP . logic_stmt  (81)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 141
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 119
	selection_stmt : IF '(' logic_stmt ')' . block  (22)
	selection_stmt : IF '(' logic_stmt ')' . block ELSE block  (23)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 144
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 120
	logic_stmt : bool_param_expr LE_OP . bool_param_expr  (76)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 145
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 121
	logic_stmt : bool_param_expr GE_OP . bool_param_expr  (77)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 146
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 122
	logic_stmt : bool_param_expr EQ_OP . bool_param_expr  (78)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 147
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 123
	logic_stmt : bool_param_expr NE_OP . bool_param_expr  (79)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 148
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 124
	logic_stmt : bool_param_expr '>' . bool_param_expr  (74)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 149
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 125
	logic_stmt : bool_param_expr '<' . bool_param_expr  (75)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 150
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 126
	loop_stmt : WHILE '(' logic_stmt ')' . block  (28)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 151
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 127
	loop_stmt : FOR '(' for_1_stmt ';' . logic_stmt ';' for_1_stmt ')' block  (29)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 152
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 128
	parentheses_stmt : '(' assign_stmt_value_eq . ')'  (57)

	')'  shift 153
	.  error


state 129
	arithmetic_stmt_factor : '(' arithmetic_stmt ')' .  (65)

	.  reduce 65


state 130
	arithmetic_stmt_factor : arithmetic_stmt .  (64)

	.  reduce 64


state 131
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (58)
	arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor .  (58)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (59)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (61)

	'*'  shift 100
	'/'  shift 101
	AND_OP  reduce 58
	OR_OP  reduce 58
	LE_OP  reduce 58
	GE_OP  reduce 58
	EQ_OP  reduce 58
	NE_OP  reduce 58
	','  reduce 58
	'>'  reduce 58
	'<'  reduce 58
	'+'  reduce 58
	'-'  reduce 58
	';'  reduce 58
	')'  reduce 58


state 132
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (58)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (59)
	arithmetic_stmt : arithmetic_stmt_factor '-' arithmetic_stmt_factor .  (59)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (61)

	'*'  shift 100
	'/'  shift 101
	AND_OP  reduce 59
	OR_OP  reduce 59
	LE_OP  reduce 59
	GE_OP  reduce 59
	EQ_OP  reduce 59
	NE_OP  reduce 59
	','  reduce 59
	'>'  reduce 59
	'<'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	';'  reduce 59
	')'  reduce 59


state 133
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (58)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (59)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor '*' arithmetic_stmt_factor .  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (61)

	.  reduce 60


state 134
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (58)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (59)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor '/' arithmetic_stmt_factor .  (61)

	.  reduce 61


state 135
	selection_stmt : SWITCH '(' id_expr ')' . '{' case_stmt_list '}'  (24)

	'{'  shift 154
	.  error


state 136
	parameter : parameter ',' . IDENTIFIER  (14)

	IDENTIFIER  shift 155
	.  error


state 137
	param_list : '(' parameter ')' .  (12)

	.  reduce 12


state 138
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list . '}'  (10)
	expr_list : expr_list . statement  (16)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 156
	.  error

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 139
	args_expr : args_expr ',' args_expr_collection .  (45)

	.  reduce 45


state 140
	logic_stmt : logic_stmt . AND_OP logic_stmt  (80)
	logic_stmt : logic_stmt AND_OP logic_stmt .  (80)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (81)

	.  reduce 80


state 141
	logic_stmt : logic_stmt . AND_OP logic_stmt  (80)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (81)
	logic_stmt : logic_stmt OR_OP logic_stmt .  (81)

	.  reduce 81


state 142
	block : '{' . expr_list '}'  (53)
	expr_list : .  (17)

	.  reduce 17

	expr_list  goto 158


state 143
	block : statement .  (54)

	.  reduce 54


state 144
	selection_stmt : IF '(' logic_stmt ')' block .  (22)
	selection_stmt : IF '(' logic_stmt ')' block . ELSE block  (23)

	ELSE  shift 159
	$end  reduce 22
	IDENTIFIER  reduce 22
	IF  reduce 22
	WHILE  reduce 22
	FOR  reduce 22
	DELETE  reduce 22
	BREAK  reduce 22
	RETURN  reduce 22
	SWITCH  reduce 22
	';'  reduce 22
	'}'  reduce 22


state 145
	logic_stmt : bool_param_expr LE_OP bool_param_expr .  (76)

	.  reduce 76


state 146
	logic_stmt : bool_param_expr GE_OP bool_param_expr .  (77)

	.  reduce 77


state 147
	logic_stmt : bool_param_expr EQ_OP bool_param_expr .  (78)

	.  reduce 78


state 148
	logic_stmt : bool_param_expr NE_OP bool_param_expr .  (79)

	.  reduce 79


state 149
	logic_stmt : bool_param_expr '>' bool_param_expr .  (74)

	.  reduce 74


state 150
	logic_stmt : bool_param_expr '<' bool_param_expr .  (75)

	.  reduce 75


state 151
	loop_stmt : WHILE '(' logic_stmt ')' block .  (28)

	.  reduce 28


state 152
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt . ';' for_1_stmt ')' block  (29)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (80)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (81)

	AND_OP  shift 117
	OR_OP  shift 118
	';'  shift 160
	.  error


state 153
	parentheses_stmt : '(' assign_stmt_value_eq ')' .  (57)

	.  reduce 57


state 154
	selection_stmt : SWITCH '(' id_expr ')' '{' . case_stmt_list '}'  (24)

	CASE  shift 161
	.  error

	case_stmt_list  goto 162
	case_stmt  goto 163


state 155
	parameter : parameter ',' IDENTIFIER .  (14)

	.  reduce 14


state 156
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}' .  (10)

	.  reduce 10


state 157
	expr_list : expr_list statement .  (16)

	.  reduce 16


state 158
	expr_list : expr_list . statement  (16)
	block : '{' expr_list . '}'  (53)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 164
	.  error

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 159
	selection_stmt : IF '(' logic_stmt ')' block ELSE . block  (23)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 165
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 160
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' . for_1_stmt ')' block  (29)
	for_1_stmt : .  (30)

	IDENTIFIER  shift 82
	INC_OP  shift 35
	DEC_OP  shift 36
	')'  reduce 30

	var_declar_stmt  goto 83
	for_1_stmt  goto 166
	assign_stmt  goto 85
	self_inc_dec_stmt  goto 86
	single_assign_stmt  goto 22
	id_expr  goto 87


state 161
	case_stmt : CASE . double_expr ':' single_assign_stmt ';'  (26)

	TDOUBLE  shift 31
	.  error

	double_expr  goto 167


state 162
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list . '}'  (24)

	'}'  shift 168
	.  error


state 163
	case_stmt_list : case_stmt .  (25)

	.  reduce 25


state 164
	block : '{' expr_list '}' .  (53)

	.  reduce 53


state 165
	selection_stmt : IF '(' logic_stmt ')' block ELSE block .  (23)

	.  reduce 23


state 166
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt . ')' block  (29)

	')'  shift 169
	.  error


state 167
	case_stmt : CASE double_expr . ':' single_assign_stmt ';'  (26)

	':'  shift 170
	.  error


state 168
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list '}' .  (24)

	.  reduce 24


state 169
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' . block  (29)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 171
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 170
	case_stmt : CASE double_expr ':' . single_assign_stmt ';'  (26)

	IDENTIFIER  shift 82
	.  error

	single_assign_stmt  goto 172
	id_expr  goto 173


state 171
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block .  (29)

	.  reduce 29


state 172
	case_stmt : CASE double_expr ':' single_assign_stmt . ';'  (26)

	';'  shift 174
	.  error


state 173
	single_assign_stmt : id_expr . '=' assign_stmt_value  (99)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (100)

	'='  shift 57
	.  error


state 174
	case_stmt : CASE double_expr ':' single_assign_stmt ';' .  (26)

	.  reduce 26


Rules never reduced:
	case_stmt_block : single_assign_stmt ';'  (27)


49 terminals, 40 nonterminals
106 grammar rules, 175 states
