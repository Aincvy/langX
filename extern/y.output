   0  $accept : program $end

   1  program : statement_list

   2  statement_list : statement_list statement
   3                 |

   4  statement : ';'
   5            | declar_stmt
   6            | con_ctl_stmt
   7            | simple_stmt ';'

   8  declar_stmt : func_declar_stmt
   9              | var_declar_stmt

  10  func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}'

  11  param_list :
  12             | '(' parameter ')'

  13  parameter : IDENTIFIER
  14            | parameter ',' IDENTIFIER
  15            |

  16  expr_list : expr_list statement
  17            |

  18  var_declar_stmt : id_expr ';'
  19                  | id_expr ',' var_declar_stmt

  20  con_ctl_stmt : selection_stmt
  21               | loop_stmt

  22  selection_stmt : IF '(' logic_stmt ')' block
  23                 | IF '(' logic_stmt ')' block ELSE block
  24                 | SWITCH '(' id_expr ')' '{' case_stmt_list '}'

  25  case_stmt_list : case_stmt
  26                 | case_stmt_list case_stmt

  27  case_stmt : CASE double_expr ':' expr_list
  28            | CASE double_expr ':' statement
  29            | DEFAULT ':' expr_list

  30  loop_stmt : WHILE '(' logic_stmt ')' block
  31            | FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block

  32  for_1_stmt :
  33             | assign_stmt
  34             | var_declar_stmt
  35             | self_inc_dec_stmt

  36  simple_stmt : assign_stmt
  37              | call_statement
  38              | DELETE IDENTIFIER ';'
  39              | interrupt_stmt

  40  interrupt_stmt : BREAK
  41                 | RETURN
  42                 | RETURN assign_stmt_value

  43  call_statement : IDENTIFIER '(' args_list ')'

  44  args_list :
  45            | args_expr

  46  args_expr : args_expr_collection
  47            | args_expr ',' args_expr_collection

  48  args_expr_collection : t_bool_expr
  49                       | double_expr
  50                       | id_expr
  51                       | string_expr
  52                       | uminus_expr
  53                       | call_statement
  54                       | arithmetic_stmt

  55  block : '{' expr_list '}'
  56        | statement

  57  double_or_ps_expr : double_expr
  58                    | parentheses_stmt

  59  parentheses_stmt : '(' assign_stmt_value_eq ')'

  60  arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor
  61                  | arithmetic_stmt_factor '-' arithmetic_stmt_factor
  62                  | arithmetic_stmt_factor '*' arithmetic_stmt_factor
  63                  | arithmetic_stmt_factor '/' arithmetic_stmt_factor

  64  arithmetic_stmt_factor : assign_stmt_value_eq
  65                         | string_expr
  66                         | arithmetic_stmt
  67                         | '(' arithmetic_stmt ')'

  68  id_expr : IDENTIFIER

  69  t_bool_expr : TBOOL

  70  double_expr : TDOUBLE

  71  uminus_expr : '-' double_or_ps_expr

  72  string_expr : TSTRING

  73  bool_param_expr : assign_stmt_value_eq
  74                  | arithmetic_stmt

  75  logic_stmt : bool_param_expr
  76             | bool_param_expr '>' bool_param_expr
  77             | bool_param_expr '<' bool_param_expr
  78             | bool_param_expr LE_OP bool_param_expr
  79             | bool_param_expr GE_OP bool_param_expr
  80             | bool_param_expr EQ_OP bool_param_expr
  81             | bool_param_expr NE_OP bool_param_expr
  82             | logic_stmt AND_OP logic_stmt
  83             | logic_stmt OR_OP logic_stmt

  84  self_inc_dec_stmt : INC_OP id_expr
  85                    | DEC_OP id_expr
  86                    | id_expr INC_OP
  87                    | id_expr DEC_OP

  88  assign_stmt_value : double_expr
  89                    | uminus_expr
  90                    | t_bool_expr
  91                    | arithmetic_stmt
  92                    | call_statement
  93                    | id_expr
  94                    | string_expr
  95                    | self_inc_dec_stmt

  96  assign_stmt_value_eq : double_expr
  97                       | uminus_expr
  98                       | call_statement
  99                       | id_expr
 100                       | self_inc_dec_stmt

 101  single_assign_stmt : id_expr '=' assign_stmt_value
 102                     | id_expr '=' single_assign_stmt

 103  assign_stmt : single_assign_stmt
 104              | id_expr ADD_EQ assign_stmt_value_eq
 105              | id_expr SUB_EQ assign_stmt_value_eq
 106              | id_expr MUL_EQ assign_stmt_value_eq
 107              | id_expr DIV_EQ assign_stmt_value_eq

state 0
	$accept : . program $end  (0)
	statement_list : .  (3)

	.  reduce 3

	program  goto 1
	statement_list  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : statement_list .  (1)
	statement_list : statement_list . statement  (2)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	$end  reduce 1

	statement  goto 12
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 3
	func_declar_stmt : IDENTIFIER . FUNC_OP param_list '{' expr_list '}'  (10)
	call_statement : IDENTIFIER . '(' args_list ')'  (43)
	id_expr : IDENTIFIER .  (68)

	FUNC_OP  shift 25
	'('  shift 26
	ADD_EQ  reduce 68
	SUB_EQ  reduce 68
	MUL_EQ  reduce 68
	DIV_EQ  reduce 68
	','  reduce 68
	'='  reduce 68
	';'  reduce 68


state 4
	selection_stmt : IF . '(' logic_stmt ')' block  (22)
	selection_stmt : IF . '(' logic_stmt ')' block ELSE block  (23)

	'('  shift 27
	.  error


state 5
	loop_stmt : WHILE . '(' logic_stmt ')' block  (30)

	'('  shift 28
	.  error


state 6
	loop_stmt : FOR . '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (31)

	'('  shift 29
	.  error


state 7
	simple_stmt : DELETE . IDENTIFIER ';'  (38)

	IDENTIFIER  shift 30
	.  error


state 8
	interrupt_stmt : BREAK .  (40)

	.  reduce 40


state 9
	interrupt_stmt : RETURN .  (41)
	interrupt_stmt : RETURN . assign_stmt_value  (42)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	';'  reduce 41

	arithmetic_stmt  goto 39
	self_inc_dec_stmt  goto 40
	call_statement  goto 41
	assign_stmt_value_eq  goto 42
	assign_stmt_value  goto 43
	id_expr  goto 44
	t_bool_expr  goto 45
	double_expr  goto 46
	uminus_expr  goto 47
	string_expr  goto 48
	arithmetic_stmt_factor  goto 49


state 10
	selection_stmt : SWITCH . '(' id_expr ')' '{' case_stmt_list '}'  (24)

	'('  shift 50
	.  error


state 11
	statement : ';' .  (4)

	.  reduce 4


state 12
	statement_list : statement_list statement .  (2)

	.  reduce 2


state 13
	statement : declar_stmt .  (5)

	.  reduce 5


state 14
	statement : con_ctl_stmt .  (6)

	.  reduce 6


state 15
	statement : simple_stmt . ';'  (7)

	';'  shift 51
	.  error


state 16
	declar_stmt : func_declar_stmt .  (8)

	.  reduce 8


state 17
	declar_stmt : var_declar_stmt .  (9)

	.  reduce 9


state 18
	con_ctl_stmt : selection_stmt .  (20)

	.  reduce 20


state 19
	con_ctl_stmt : loop_stmt .  (21)

	.  reduce 21


state 20
	simple_stmt : assign_stmt .  (36)

	.  reduce 36


state 21
	simple_stmt : call_statement .  (37)

	.  reduce 37


state 22
	assign_stmt : single_assign_stmt .  (103)

	.  reduce 103


state 23
	simple_stmt : interrupt_stmt .  (39)

	.  reduce 39


state 24
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (101)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (102)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (104)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (105)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (106)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (107)

	ADD_EQ  shift 52
	SUB_EQ  shift 53
	MUL_EQ  shift 54
	DIV_EQ  shift 55
	','  shift 56
	'='  shift 57
	';'  shift 58
	.  error


state 25
	func_declar_stmt : IDENTIFIER FUNC_OP . param_list '{' expr_list '}'  (10)
	param_list : .  (11)

	'('  shift 59
	'{'  reduce 11

	param_list  goto 60


state 26
	call_statement : IDENTIFIER '(' . args_list ')'  (43)
	args_list : .  (44)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	')'  reduce 44

	arithmetic_stmt  goto 61
	self_inc_dec_stmt  goto 62
	call_statement  goto 63
	args_expr_collection  goto 64
	assign_stmt_value_eq  goto 42
	id_expr  goto 65
	t_bool_expr  goto 66
	double_expr  goto 67
	uminus_expr  goto 68
	string_expr  goto 69
	arithmetic_stmt_factor  goto 49
	args_list  goto 70
	args_expr  goto 71


state 27
	selection_stmt : IF '(' . logic_stmt ')' block  (22)
	selection_stmt : IF '(' . logic_stmt ')' block ELSE block  (23)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 72
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 28
	loop_stmt : WHILE '(' . logic_stmt ')' block  (30)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 81
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 29
	loop_stmt : FOR '(' . for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (31)
	for_1_stmt : .  (32)

	IDENTIFIER  shift 82
	INC_OP  shift 35
	DEC_OP  shift 36
	';'  reduce 32

	var_declar_stmt  goto 83
	for_1_stmt  goto 84
	assign_stmt  goto 85
	self_inc_dec_stmt  goto 86
	single_assign_stmt  goto 22
	id_expr  goto 87


state 30
	simple_stmt : DELETE IDENTIFIER . ';'  (38)

	';'  shift 88
	.  error


state 31
	double_expr : TDOUBLE .  (70)

	.  reduce 70


state 32
	t_bool_expr : TBOOL .  (69)

	.  reduce 69


state 33
	call_statement : IDENTIFIER . '(' args_list ')'  (43)
	id_expr : IDENTIFIER .  (68)

	'('  shift 26
	AND_OP  reduce 68
	OR_OP  reduce 68
	LE_OP  reduce 68
	GE_OP  reduce 68
	EQ_OP  reduce 68
	NE_OP  reduce 68
	INC_OP  reduce 68
	DEC_OP  reduce 68
	','  reduce 68
	'='  reduce 68
	'>'  reduce 68
	'<'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	';'  reduce 68
	')'  reduce 68


state 34
	string_expr : TSTRING .  (72)

	.  reduce 72


state 35
	self_inc_dec_stmt : INC_OP . id_expr  (84)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 89


state 36
	self_inc_dec_stmt : DEC_OP . id_expr  (85)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 90


state 37
	uminus_expr : '-' . double_or_ps_expr  (71)

	TDOUBLE  shift 31
	'('  shift 91
	.  error

	double_or_ps_expr  goto 92
	parentheses_stmt  goto 93
	double_expr  goto 94


state 38
	arithmetic_stmt_factor : '(' . arithmetic_stmt ')'  (67)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 95
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 39
	arithmetic_stmt_factor : arithmetic_stmt .  (66)
	assign_stmt_value : arithmetic_stmt .  (91)

	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	';'  reduce 91
	')'  reduce 91


state 40
	assign_stmt_value : self_inc_dec_stmt .  (95)
	assign_stmt_value_eq : self_inc_dec_stmt .  (100)

	'+'  reduce 100
	'-'  reduce 100
	'*'  reduce 100
	'/'  reduce 100
	';'  reduce 95
	')'  reduce 95


state 41
	assign_stmt_value : call_statement .  (92)
	assign_stmt_value_eq : call_statement .  (98)

	'+'  reduce 98
	'-'  reduce 98
	'*'  reduce 98
	'/'  reduce 98
	';'  reduce 92
	')'  reduce 92


state 42
	arithmetic_stmt_factor : assign_stmt_value_eq .  (64)

	.  reduce 64


state 43
	interrupt_stmt : RETURN assign_stmt_value .  (42)

	.  reduce 42


state 44
	self_inc_dec_stmt : id_expr . INC_OP  (86)
	self_inc_dec_stmt : id_expr . DEC_OP  (87)
	assign_stmt_value : id_expr .  (93)
	assign_stmt_value_eq : id_expr .  (99)

	INC_OP  shift 96
	DEC_OP  shift 97
	'+'  reduce 99
	'-'  reduce 99
	'*'  reduce 99
	'/'  reduce 99
	';'  reduce 93


state 45
	assign_stmt_value : t_bool_expr .  (90)

	.  reduce 90


state 46
	assign_stmt_value : double_expr .  (88)
	assign_stmt_value_eq : double_expr .  (96)

	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	';'  reduce 88
	')'  reduce 88


state 47
	assign_stmt_value : uminus_expr .  (89)
	assign_stmt_value_eq : uminus_expr .  (97)

	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	';'  reduce 89
	')'  reduce 89


state 48
	arithmetic_stmt_factor : string_expr .  (65)
	assign_stmt_value : string_expr .  (94)

	'+'  reduce 65
	'-'  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	';'  reduce 94
	')'  reduce 94


state 49
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (62)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (63)

	'+'  shift 98
	'-'  shift 99
	'*'  shift 100
	'/'  shift 101
	.  error


state 50
	selection_stmt : SWITCH '(' . id_expr ')' '{' case_stmt_list '}'  (24)

	IDENTIFIER  shift 82
	.  error

	id_expr  goto 102


state 51
	statement : simple_stmt ';' .  (7)

	.  reduce 7


state 52
	assign_stmt : id_expr ADD_EQ . assign_stmt_value_eq  (104)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 103
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 53
	assign_stmt : id_expr SUB_EQ . assign_stmt_value_eq  (105)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 104
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 54
	assign_stmt : id_expr MUL_EQ . assign_stmt_value_eq  (106)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 105
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 55
	assign_stmt : id_expr DIV_EQ . assign_stmt_value_eq  (107)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 106
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 56
	var_declar_stmt : id_expr ',' . var_declar_stmt  (19)

	IDENTIFIER  shift 82
	.  error

	var_declar_stmt  goto 107
	id_expr  goto 108


state 57
	single_assign_stmt : id_expr '=' . assign_stmt_value  (101)
	single_assign_stmt : id_expr '=' . single_assign_stmt  (102)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 39
	self_inc_dec_stmt  goto 40
	call_statement  goto 41
	assign_stmt_value_eq  goto 42
	assign_stmt_value  goto 109
	single_assign_stmt  goto 110
	id_expr  goto 111
	t_bool_expr  goto 45
	double_expr  goto 46
	uminus_expr  goto 47
	string_expr  goto 48
	arithmetic_stmt_factor  goto 49


state 58
	var_declar_stmt : id_expr ';' .  (18)

	.  reduce 18


state 59
	param_list : '(' . parameter ')'  (12)
	parameter : .  (15)

	IDENTIFIER  shift 112
	','  reduce 15
	')'  reduce 15

	parameter  goto 113


state 60
	func_declar_stmt : IDENTIFIER FUNC_OP param_list . '{' expr_list '}'  (10)

	'{'  shift 114
	.  error


state 61
	args_expr_collection : arithmetic_stmt .  (54)
	arithmetic_stmt_factor : arithmetic_stmt .  (66)

	','  reduce 54
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	')'  reduce 54


state 62
	assign_stmt_value_eq : self_inc_dec_stmt .  (100)

	.  reduce 100


state 63
	args_expr_collection : call_statement .  (53)
	assign_stmt_value_eq : call_statement .  (98)

	','  reduce 53
	'+'  reduce 98
	'-'  reduce 98
	'*'  reduce 98
	'/'  reduce 98
	')'  reduce 53


state 64
	args_expr : args_expr_collection .  (46)

	.  reduce 46


state 65
	args_expr_collection : id_expr .  (50)
	self_inc_dec_stmt : id_expr . INC_OP  (86)
	self_inc_dec_stmt : id_expr . DEC_OP  (87)
	assign_stmt_value_eq : id_expr .  (99)

	INC_OP  shift 96
	DEC_OP  shift 97
	','  reduce 50
	'+'  reduce 99
	'-'  reduce 99
	'*'  reduce 99
	'/'  reduce 99
	')'  reduce 50


state 66
	args_expr_collection : t_bool_expr .  (48)

	.  reduce 48


state 67
	args_expr_collection : double_expr .  (49)
	assign_stmt_value_eq : double_expr .  (96)

	','  reduce 49
	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	')'  reduce 49


state 68
	args_expr_collection : uminus_expr .  (52)
	assign_stmt_value_eq : uminus_expr .  (97)

	','  reduce 52
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	')'  reduce 52


state 69
	args_expr_collection : string_expr .  (51)
	arithmetic_stmt_factor : string_expr .  (65)

	','  reduce 51
	'+'  reduce 65
	'-'  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	')'  reduce 51


state 70
	call_statement : IDENTIFIER '(' args_list . ')'  (43)

	')'  shift 115
	.  error


state 71
	args_list : args_expr .  (45)
	args_expr : args_expr . ',' args_expr_collection  (47)

	','  shift 116
	')'  reduce 45


state 72
	selection_stmt : IF '(' logic_stmt . ')' block  (22)
	selection_stmt : IF '(' logic_stmt . ')' block ELSE block  (23)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (82)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (83)

	AND_OP  shift 117
	OR_OP  shift 118
	')'  shift 119
	.  error


state 73
	arithmetic_stmt_factor : arithmetic_stmt .  (66)
	bool_param_expr : arithmetic_stmt .  (74)

	AND_OP  reduce 74
	OR_OP  reduce 74
	LE_OP  reduce 74
	GE_OP  reduce 74
	EQ_OP  reduce 74
	NE_OP  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	';'  reduce 74
	')'  reduce 74


state 74
	assign_stmt_value_eq : call_statement .  (98)

	.  reduce 98


state 75
	arithmetic_stmt_factor : assign_stmt_value_eq .  (64)
	bool_param_expr : assign_stmt_value_eq .  (73)

	AND_OP  reduce 73
	OR_OP  reduce 73
	LE_OP  reduce 73
	GE_OP  reduce 73
	EQ_OP  reduce 73
	NE_OP  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	';'  reduce 73
	')'  reduce 73


state 76
	logic_stmt : bool_param_expr .  (75)
	logic_stmt : bool_param_expr . '>' bool_param_expr  (76)
	logic_stmt : bool_param_expr . '<' bool_param_expr  (77)
	logic_stmt : bool_param_expr . LE_OP bool_param_expr  (78)
	logic_stmt : bool_param_expr . GE_OP bool_param_expr  (79)
	logic_stmt : bool_param_expr . EQ_OP bool_param_expr  (80)
	logic_stmt : bool_param_expr . NE_OP bool_param_expr  (81)

	LE_OP  shift 120
	GE_OP  shift 121
	EQ_OP  shift 122
	NE_OP  shift 123
	'>'  shift 124
	'<'  shift 125
	AND_OP  reduce 75
	OR_OP  reduce 75
	';'  reduce 75
	')'  reduce 75


state 77
	self_inc_dec_stmt : id_expr . INC_OP  (86)
	self_inc_dec_stmt : id_expr . DEC_OP  (87)
	assign_stmt_value_eq : id_expr .  (99)

	INC_OP  shift 96
	DEC_OP  shift 97
	AND_OP  reduce 99
	OR_OP  reduce 99
	LE_OP  reduce 99
	GE_OP  reduce 99
	EQ_OP  reduce 99
	NE_OP  reduce 99
	','  reduce 99
	'>'  reduce 99
	'<'  reduce 99
	'+'  reduce 99
	'-'  reduce 99
	'*'  reduce 99
	'/'  reduce 99
	';'  reduce 99
	')'  reduce 99


state 78
	assign_stmt_value_eq : double_expr .  (96)

	.  reduce 96


state 79
	assign_stmt_value_eq : uminus_expr .  (97)

	.  reduce 97


state 80
	arithmetic_stmt_factor : string_expr .  (65)

	.  reduce 65


state 81
	loop_stmt : WHILE '(' logic_stmt . ')' block  (30)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (82)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (83)

	AND_OP  shift 117
	OR_OP  shift 118
	')'  shift 126
	.  error


state 82
	id_expr : IDENTIFIER .  (68)

	.  reduce 68


state 83
	for_1_stmt : var_declar_stmt .  (34)

	.  reduce 34


state 84
	loop_stmt : FOR '(' for_1_stmt . ';' logic_stmt ';' for_1_stmt ')' block  (31)

	';'  shift 127
	.  error


state 85
	for_1_stmt : assign_stmt .  (33)

	.  reduce 33


state 86
	for_1_stmt : self_inc_dec_stmt .  (35)

	.  reduce 35


state 87
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)
	self_inc_dec_stmt : id_expr . INC_OP  (86)
	self_inc_dec_stmt : id_expr . DEC_OP  (87)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (101)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (102)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (104)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (105)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (106)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (107)

	INC_OP  shift 96
	DEC_OP  shift 97
	ADD_EQ  shift 52
	SUB_EQ  shift 53
	MUL_EQ  shift 54
	DIV_EQ  shift 55
	','  shift 56
	'='  shift 57
	';'  shift 58
	.  error


state 88
	simple_stmt : DELETE IDENTIFIER ';' .  (38)

	.  reduce 38


state 89
	self_inc_dec_stmt : INC_OP id_expr .  (84)

	.  reduce 84


state 90
	self_inc_dec_stmt : DEC_OP id_expr .  (85)

	.  reduce 85


state 91
	parentheses_stmt : '(' . assign_stmt_value_eq ')'  (59)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	.  error

	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 128
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79


state 92
	uminus_expr : '-' double_or_ps_expr .  (71)

	.  reduce 71


state 93
	double_or_ps_expr : parentheses_stmt .  (58)

	.  reduce 58


state 94
	double_or_ps_expr : double_expr .  (57)

	.  reduce 57


state 95
	arithmetic_stmt_factor : arithmetic_stmt .  (66)
	arithmetic_stmt_factor : '(' arithmetic_stmt . ')'  (67)

	')'  shift 129
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66


state 96
	self_inc_dec_stmt : id_expr INC_OP .  (86)

	.  reduce 86


state 97
	self_inc_dec_stmt : id_expr DEC_OP .  (87)

	.  reduce 87


state 98
	arithmetic_stmt : arithmetic_stmt_factor '+' . arithmetic_stmt_factor  (60)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 131


state 99
	arithmetic_stmt : arithmetic_stmt_factor '-' . arithmetic_stmt_factor  (61)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 132


state 100
	arithmetic_stmt : arithmetic_stmt_factor '*' . arithmetic_stmt_factor  (62)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 133


state 101
	arithmetic_stmt : arithmetic_stmt_factor '/' . arithmetic_stmt_factor  (63)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 130
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 42
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 134


state 102
	selection_stmt : SWITCH '(' id_expr . ')' '{' case_stmt_list '}'  (24)

	')'  shift 135
	.  error


state 103
	assign_stmt : id_expr ADD_EQ assign_stmt_value_eq .  (104)

	.  reduce 104


state 104
	assign_stmt : id_expr SUB_EQ assign_stmt_value_eq .  (105)

	.  reduce 105


state 105
	assign_stmt : id_expr MUL_EQ assign_stmt_value_eq .  (106)

	.  reduce 106


state 106
	assign_stmt : id_expr DIV_EQ assign_stmt_value_eq .  (107)

	.  reduce 107


state 107
	var_declar_stmt : id_expr ',' var_declar_stmt .  (19)

	.  reduce 19


state 108
	var_declar_stmt : id_expr . ';'  (18)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (19)

	','  shift 56
	';'  shift 58
	.  error


state 109
	single_assign_stmt : id_expr '=' assign_stmt_value .  (101)

	.  reduce 101


state 110
	single_assign_stmt : id_expr '=' single_assign_stmt .  (102)

	.  reduce 102


state 111
	self_inc_dec_stmt : id_expr . INC_OP  (86)
	self_inc_dec_stmt : id_expr . DEC_OP  (87)
	assign_stmt_value : id_expr .  (93)
	assign_stmt_value_eq : id_expr .  (99)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (101)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (102)

	INC_OP  shift 96
	DEC_OP  shift 97
	'='  shift 57
	'+'  reduce 99
	'-'  reduce 99
	'*'  reduce 99
	'/'  reduce 99
	';'  reduce 93
	')'  reduce 93


state 112
	parameter : IDENTIFIER .  (13)

	.  reduce 13


state 113
	param_list : '(' parameter . ')'  (12)
	parameter : parameter . ',' IDENTIFIER  (14)

	','  shift 136
	')'  shift 137
	.  error


state 114
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' . expr_list '}'  (10)
	expr_list : .  (17)

	.  reduce 17

	expr_list  goto 138


state 115
	call_statement : IDENTIFIER '(' args_list ')' .  (43)

	.  reduce 43


state 116
	args_expr : args_expr ',' . args_expr_collection  (47)

	TDOUBLE  shift 31
	TBOOL  shift 32
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 61
	self_inc_dec_stmt  goto 62
	call_statement  goto 63
	args_expr_collection  goto 139
	assign_stmt_value_eq  goto 42
	id_expr  goto 65
	t_bool_expr  goto 66
	double_expr  goto 67
	uminus_expr  goto 68
	string_expr  goto 69
	arithmetic_stmt_factor  goto 49


state 117
	logic_stmt : logic_stmt AND_OP . logic_stmt  (82)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 140
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 118
	logic_stmt : logic_stmt OR_OP . logic_stmt  (83)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 141
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 119
	selection_stmt : IF '(' logic_stmt ')' . block  (22)
	selection_stmt : IF '(' logic_stmt ')' . block ELSE block  (23)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 144
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 120
	logic_stmt : bool_param_expr LE_OP . bool_param_expr  (78)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 145
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 121
	logic_stmt : bool_param_expr GE_OP . bool_param_expr  (79)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 146
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 122
	logic_stmt : bool_param_expr EQ_OP . bool_param_expr  (80)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 147
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 123
	logic_stmt : bool_param_expr NE_OP . bool_param_expr  (81)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 148
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 124
	logic_stmt : bool_param_expr '>' . bool_param_expr  (76)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 149
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 125
	logic_stmt : bool_param_expr '<' . bool_param_expr  (77)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 150
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 126
	loop_stmt : WHILE '(' logic_stmt ')' . block  (30)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 151
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 127
	loop_stmt : FOR '(' for_1_stmt ';' . logic_stmt ';' for_1_stmt ')' block  (31)

	TDOUBLE  shift 31
	IDENTIFIER  shift 33
	TSTRING  shift 34
	INC_OP  shift 35
	DEC_OP  shift 36
	'-'  shift 37
	'('  shift 38
	.  error

	logic_stmt  goto 152
	arithmetic_stmt  goto 73
	self_inc_dec_stmt  goto 62
	call_statement  goto 74
	assign_stmt_value_eq  goto 75
	bool_param_expr  goto 76
	id_expr  goto 77
	double_expr  goto 78
	uminus_expr  goto 79
	string_expr  goto 80
	arithmetic_stmt_factor  goto 49


state 128
	parentheses_stmt : '(' assign_stmt_value_eq . ')'  (59)

	')'  shift 153
	.  error


state 129
	arithmetic_stmt_factor : '(' arithmetic_stmt ')' .  (67)

	.  reduce 67


state 130
	arithmetic_stmt_factor : arithmetic_stmt .  (66)

	.  reduce 66


state 131
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor .  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (62)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (63)

	'*'  shift 100
	'/'  shift 101
	AND_OP  reduce 60
	OR_OP  reduce 60
	LE_OP  reduce 60
	GE_OP  reduce 60
	EQ_OP  reduce 60
	NE_OP  reduce 60
	','  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	';'  reduce 60
	')'  reduce 60


state 132
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor '-' arithmetic_stmt_factor .  (61)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (62)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (63)

	'*'  shift 100
	'/'  shift 101
	AND_OP  reduce 61
	OR_OP  reduce 61
	LE_OP  reduce 61
	GE_OP  reduce 61
	EQ_OP  reduce 61
	NE_OP  reduce 61
	','  reduce 61
	'>'  reduce 61
	'<'  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	';'  reduce 61
	')'  reduce 61


state 133
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (62)
	arithmetic_stmt : arithmetic_stmt_factor '*' arithmetic_stmt_factor .  (62)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (63)

	.  reduce 62


state 134
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (60)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (61)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (62)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (63)
	arithmetic_stmt : arithmetic_stmt_factor '/' arithmetic_stmt_factor .  (63)

	.  reduce 63


state 135
	selection_stmt : SWITCH '(' id_expr ')' . '{' case_stmt_list '}'  (24)

	'{'  shift 154
	.  error


state 136
	parameter : parameter ',' . IDENTIFIER  (14)

	IDENTIFIER  shift 155
	.  error


state 137
	param_list : '(' parameter ')' .  (12)

	.  reduce 12


state 138
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list . '}'  (10)
	expr_list : expr_list . statement  (16)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 156
	.  error

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 139
	args_expr : args_expr ',' args_expr_collection .  (47)

	.  reduce 47


state 140
	logic_stmt : logic_stmt . AND_OP logic_stmt  (82)
	logic_stmt : logic_stmt AND_OP logic_stmt .  (82)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (83)

	.  reduce 82


state 141
	logic_stmt : logic_stmt . AND_OP logic_stmt  (82)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (83)
	logic_stmt : logic_stmt OR_OP logic_stmt .  (83)

	.  reduce 83


state 142
	block : '{' . expr_list '}'  (55)
	expr_list : .  (17)

	.  reduce 17

	expr_list  goto 158


state 143
	block : statement .  (56)

	.  reduce 56


state 144
	selection_stmt : IF '(' logic_stmt ')' block .  (22)
	selection_stmt : IF '(' logic_stmt ')' block . ELSE block  (23)

	ELSE  shift 159
	$end  reduce 22
	IDENTIFIER  reduce 22
	IF  reduce 22
	WHILE  reduce 22
	FOR  reduce 22
	DELETE  reduce 22
	BREAK  reduce 22
	RETURN  reduce 22
	SWITCH  reduce 22
	CASE  reduce 22
	DEFAULT  reduce 22
	';'  reduce 22
	'}'  reduce 22


state 145
	logic_stmt : bool_param_expr LE_OP bool_param_expr .  (78)

	.  reduce 78


state 146
	logic_stmt : bool_param_expr GE_OP bool_param_expr .  (79)

	.  reduce 79


state 147
	logic_stmt : bool_param_expr EQ_OP bool_param_expr .  (80)

	.  reduce 80


state 148
	logic_stmt : bool_param_expr NE_OP bool_param_expr .  (81)

	.  reduce 81


state 149
	logic_stmt : bool_param_expr '>' bool_param_expr .  (76)

	.  reduce 76


state 150
	logic_stmt : bool_param_expr '<' bool_param_expr .  (77)

	.  reduce 77


state 151
	loop_stmt : WHILE '(' logic_stmt ')' block .  (30)

	.  reduce 30


state 152
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt . ';' for_1_stmt ')' block  (31)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (82)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (83)

	AND_OP  shift 117
	OR_OP  shift 118
	';'  shift 160
	.  error


state 153
	parentheses_stmt : '(' assign_stmt_value_eq ')' .  (59)

	.  reduce 59


state 154
	selection_stmt : SWITCH '(' id_expr ')' '{' . case_stmt_list '}'  (24)

	CASE  shift 161
	DEFAULT  shift 162
	.  error

	case_stmt_list  goto 163
	case_stmt  goto 164


state 155
	parameter : parameter ',' IDENTIFIER .  (14)

	.  reduce 14


state 156
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}' .  (10)

	.  reduce 10


state 157
	expr_list : expr_list statement .  (16)

	.  reduce 16


state 158
	expr_list : expr_list . statement  (16)
	block : '{' expr_list . '}'  (55)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 165
	.  error

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 159
	selection_stmt : IF '(' logic_stmt ')' block ELSE . block  (23)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 166
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 160
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' . for_1_stmt ')' block  (31)
	for_1_stmt : .  (32)

	IDENTIFIER  shift 82
	INC_OP  shift 35
	DEC_OP  shift 36
	')'  reduce 32

	var_declar_stmt  goto 83
	for_1_stmt  goto 167
	assign_stmt  goto 85
	self_inc_dec_stmt  goto 86
	single_assign_stmt  goto 22
	id_expr  goto 87


state 161
	case_stmt : CASE . double_expr ':' expr_list  (27)
	case_stmt : CASE . double_expr ':' statement  (28)

	TDOUBLE  shift 31
	.  error

	double_expr  goto 168


state 162
	case_stmt : DEFAULT . ':' expr_list  (29)

	':'  shift 169
	.  error


state 163
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list . '}'  (24)
	case_stmt_list : case_stmt_list . case_stmt  (26)

	CASE  shift 161
	DEFAULT  shift 162
	'}'  shift 170
	.  error

	case_stmt  goto 171


state 164
	case_stmt_list : case_stmt .  (25)

	.  reduce 25


state 165
	block : '{' expr_list '}' .  (55)

	.  reduce 55


state 166
	selection_stmt : IF '(' logic_stmt ')' block ELSE block .  (23)

	.  reduce 23


state 167
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt . ')' block  (31)

	')'  shift 172
	.  error


state 168
	case_stmt : CASE double_expr . ':' expr_list  (27)
	case_stmt : CASE double_expr . ':' statement  (28)

	':'  shift 173
	.  error


state 169
	case_stmt : DEFAULT ':' . expr_list  (29)
	expr_list : .  (17)

	.  reduce 17

	expr_list  goto 174


state 170
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list '}' .  (24)

	.  reduce 24


state 171
	case_stmt_list : case_stmt_list case_stmt .  (26)

	.  reduce 26


state 172
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' . block  (31)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 142
	.  error

	statement  goto 143
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 175
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


173: shift/reduce conflict (shift 3, reduce 17) on IDENTIFIER
173: shift/reduce conflict (shift 4, reduce 17) on IF
173: shift/reduce conflict (shift 5, reduce 17) on WHILE
173: shift/reduce conflict (shift 6, reduce 17) on FOR
173: shift/reduce conflict (shift 7, reduce 17) on DELETE
173: shift/reduce conflict (shift 8, reduce 17) on BREAK
173: shift/reduce conflict (shift 9, reduce 17) on RETURN
173: shift/reduce conflict (shift 10, reduce 17) on SWITCH
173: shift/reduce conflict (shift 11, reduce 17) on ';'
state 173
	case_stmt : CASE double_expr ':' . expr_list  (27)
	case_stmt : CASE double_expr ':' . statement  (28)
	expr_list : .  (17)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	CASE  reduce 17
	DEFAULT  reduce 17
	'}'  reduce 17

	statement  goto 176
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	expr_list  goto 177
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 174
	expr_list : expr_list . statement  (16)
	case_stmt : DEFAULT ':' expr_list .  (29)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	CASE  reduce 29
	DEFAULT  reduce 29
	'}'  reduce 29

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


state 175
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block .  (31)

	.  reduce 31


state 176
	case_stmt : CASE double_expr ':' statement .  (28)

	.  reduce 28


state 177
	expr_list : expr_list . statement  (16)
	case_stmt : CASE double_expr ':' expr_list .  (27)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	CASE  reduce 27
	DEFAULT  reduce 27
	'}'  reduce 27

	statement  goto 157
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24


State 173 contains 9 shift/reduce conflicts.


49 terminals, 39 nonterminals
108 grammar rules, 178 states
