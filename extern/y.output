   0  $accept : program $end

   1  program : statement_list

   2  statement_list : statement_list statement
   3                 |

   4  statement : ';'
   5            | declar_stmt
   6            | con_ctl_stmt
   7            | simple_stmt ';'

   8  declar_stmt : func_declar_stmt
   9              | var_declar_stmt
  10              | class_declar_stmt

  11  class_declar_stmt : IDENTIFIER class_body

  12  class_body : '{' class_body_stmt_list '}'

  13  class_body_stmt_list :
  14                       | class_body_stmt_list class_body_stmt
  15                       | class_body_stmt

  16  class_body_stmt : IDENTIFIER ';'

  17  func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}'

  18  param_list :
  19             | '(' parameter ')'

  20  parameter : IDENTIFIER
  21            | parameter ',' IDENTIFIER
  22            |

  23  expr_list : expr_list statement
  24            |

  25  var_declar_stmt : id_expr ';'
  26                  | id_expr ',' var_declar_stmt

  27  con_ctl_stmt : selection_stmt
  28               | loop_stmt

  29  selection_stmt : IF '(' logic_stmt ')' block
  30                 | IF '(' logic_stmt ')' block ELSE block
  31                 | SWITCH '(' id_expr ')' '{' case_stmt_list '}'

  32  case_stmt_list : case_stmt
  33                 | case_stmt_list case_stmt

  34  case_stmt : CASE double_expr ':' expr_list
  35            | DEFAULT ':' expr_list

  36  loop_stmt : WHILE '(' logic_stmt ')' block
  37            | FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block

  38  for_1_stmt :
  39             | assign_stmt
  40             | var_declar_stmt
  41             | self_inc_dec_stmt

  42  simple_stmt : assign_stmt
  43              | call_statement
  44              | DELETE IDENTIFIER ';'
  45              | interrupt_stmt

  46  interrupt_stmt : BREAK
  47                 | RETURN
  48                 | RETURN assign_stmt_value

  49  call_statement : IDENTIFIER '(' args_list ')'

  50  args_list :
  51            | args_expr

  52  args_expr : args_expr_collection
  53            | args_expr ',' args_expr_collection

  54  args_expr_collection : t_bool_expr
  55                       | double_expr
  56                       | id_expr
  57                       | string_expr
  58                       | uminus_expr
  59                       | call_statement
  60                       | arithmetic_stmt

  61  block : '{' expr_list '}'
  62        | statement

  63  double_or_ps_expr : double_expr
  64                    | parentheses_stmt

  65  parentheses_stmt : '(' assign_stmt_value_eq ')'

  66  arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor
  67                  | arithmetic_stmt_factor '-' arithmetic_stmt_factor
  68                  | arithmetic_stmt_factor '*' arithmetic_stmt_factor
  69                  | arithmetic_stmt_factor '/' arithmetic_stmt_factor

  70  arithmetic_stmt_factor : assign_stmt_value_eq
  71                         | string_expr
  72                         | arithmetic_stmt
  73                         | '(' arithmetic_stmt ')'

  74  id_expr : IDENTIFIER

  75  t_bool_expr : TBOOL

  76  double_expr : TDOUBLE

  77  uminus_expr : '-' double_or_ps_expr

  78  string_expr : TSTRING

  79  bool_param_expr : assign_stmt_value_eq
  80                  | arithmetic_stmt

  81  logic_stmt : bool_param_expr
  82             | bool_param_expr '>' bool_param_expr
  83             | bool_param_expr '<' bool_param_expr
  84             | bool_param_expr LE_OP bool_param_expr
  85             | bool_param_expr GE_OP bool_param_expr
  86             | bool_param_expr EQ_OP bool_param_expr
  87             | bool_param_expr NE_OP bool_param_expr
  88             | logic_stmt AND_OP logic_stmt
  89             | logic_stmt OR_OP logic_stmt

  90  self_inc_dec_stmt : INC_OP id_expr
  91                    | DEC_OP id_expr
  92                    | id_expr INC_OP
  93                    | id_expr DEC_OP

  94  assign_stmt_value : double_expr
  95                    | uminus_expr
  96                    | t_bool_expr
  97                    | arithmetic_stmt
  98                    | call_statement
  99                    | id_expr
 100                    | string_expr
 101                    | self_inc_dec_stmt

 102  assign_stmt_value_eq : double_expr
 103                       | uminus_expr
 104                       | call_statement
 105                       | id_expr
 106                       | self_inc_dec_stmt

 107  single_assign_stmt : id_expr '=' assign_stmt_value
 108                     | id_expr '=' single_assign_stmt

 109  assign_stmt : single_assign_stmt
 110              | id_expr ADD_EQ assign_stmt_value_eq
 111              | id_expr SUB_EQ assign_stmt_value_eq
 112              | id_expr MUL_EQ assign_stmt_value_eq
 113              | id_expr DIV_EQ assign_stmt_value_eq

state 0
	$accept : . program $end  (0)
	statement_list : .  (3)

	.  reduce 3

	program  goto 1
	statement_list  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : statement_list .  (1)
	statement_list : statement_list . statement  (2)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	$end  reduce 1

	statement  goto 12
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 3
	class_declar_stmt : IDENTIFIER . class_body  (11)
	func_declar_stmt : IDENTIFIER . FUNC_OP param_list '{' expr_list '}'  (17)
	call_statement : IDENTIFIER . '(' args_list ')'  (49)
	id_expr : IDENTIFIER .  (74)

	FUNC_OP  shift 26
	'{'  shift 27
	'('  shift 28
	ADD_EQ  reduce 74
	SUB_EQ  reduce 74
	MUL_EQ  reduce 74
	DIV_EQ  reduce 74
	','  reduce 74
	'='  reduce 74
	';'  reduce 74

	class_body  goto 29


state 4
	selection_stmt : IF . '(' logic_stmt ')' block  (29)
	selection_stmt : IF . '(' logic_stmt ')' block ELSE block  (30)

	'('  shift 30
	.  error


state 5
	loop_stmt : WHILE . '(' logic_stmt ')' block  (36)

	'('  shift 31
	.  error


state 6
	loop_stmt : FOR . '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (37)

	'('  shift 32
	.  error


state 7
	simple_stmt : DELETE . IDENTIFIER ';'  (44)

	IDENTIFIER  shift 33
	.  error


state 8
	interrupt_stmt : BREAK .  (46)

	.  reduce 46


state 9
	interrupt_stmt : RETURN .  (47)
	interrupt_stmt : RETURN . assign_stmt_value  (48)

	TDOUBLE  shift 34
	TBOOL  shift 35
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	';'  reduce 47

	arithmetic_stmt  goto 42
	self_inc_dec_stmt  goto 43
	call_statement  goto 44
	assign_stmt_value_eq  goto 45
	assign_stmt_value  goto 46
	id_expr  goto 47
	t_bool_expr  goto 48
	double_expr  goto 49
	uminus_expr  goto 50
	string_expr  goto 51
	arithmetic_stmt_factor  goto 52


state 10
	selection_stmt : SWITCH . '(' id_expr ')' '{' case_stmt_list '}'  (31)

	'('  shift 53
	.  error


state 11
	statement : ';' .  (4)

	.  reduce 4


state 12
	statement_list : statement_list statement .  (2)

	.  reduce 2


state 13
	statement : declar_stmt .  (5)

	.  reduce 5


state 14
	statement : con_ctl_stmt .  (6)

	.  reduce 6


state 15
	statement : simple_stmt . ';'  (7)

	';'  shift 54
	.  error


state 16
	declar_stmt : func_declar_stmt .  (8)

	.  reduce 8


state 17
	declar_stmt : var_declar_stmt .  (9)

	.  reduce 9


state 18
	con_ctl_stmt : selection_stmt .  (27)

	.  reduce 27


state 19
	con_ctl_stmt : loop_stmt .  (28)

	.  reduce 28


state 20
	simple_stmt : assign_stmt .  (42)

	.  reduce 42


state 21
	simple_stmt : call_statement .  (43)

	.  reduce 43


state 22
	assign_stmt : single_assign_stmt .  (109)

	.  reduce 109


state 23
	simple_stmt : interrupt_stmt .  (45)

	.  reduce 45


state 24
	var_declar_stmt : id_expr . ';'  (25)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (26)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (107)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (108)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (110)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (111)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (112)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (113)

	ADD_EQ  shift 55
	SUB_EQ  shift 56
	MUL_EQ  shift 57
	DIV_EQ  shift 58
	','  shift 59
	'='  shift 60
	';'  shift 61
	.  error


state 25
	declar_stmt : class_declar_stmt .  (10)

	.  reduce 10


state 26
	func_declar_stmt : IDENTIFIER FUNC_OP . param_list '{' expr_list '}'  (17)
	param_list : .  (18)

	'('  shift 62
	'{'  reduce 18

	param_list  goto 63


27: shift/reduce conflict (shift 64, reduce 13) on IDENTIFIER
state 27
	class_body : '{' . class_body_stmt_list '}'  (12)
	class_body_stmt_list : .  (13)

	IDENTIFIER  shift 64
	'}'  reduce 13

	class_body_stmt  goto 65
	class_body_stmt_list  goto 66


state 28
	call_statement : IDENTIFIER '(' . args_list ')'  (49)
	args_list : .  (50)

	TDOUBLE  shift 34
	TBOOL  shift 35
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	')'  reduce 50

	arithmetic_stmt  goto 67
	self_inc_dec_stmt  goto 68
	call_statement  goto 69
	args_expr_collection  goto 70
	assign_stmt_value_eq  goto 45
	id_expr  goto 71
	t_bool_expr  goto 72
	double_expr  goto 73
	uminus_expr  goto 74
	string_expr  goto 75
	arithmetic_stmt_factor  goto 52
	args_list  goto 76
	args_expr  goto 77


state 29
	class_declar_stmt : IDENTIFIER class_body .  (11)

	.  reduce 11


state 30
	selection_stmt : IF '(' . logic_stmt ')' block  (29)
	selection_stmt : IF '(' . logic_stmt ')' block ELSE block  (30)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	logic_stmt  goto 78
	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 82
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 31
	loop_stmt : WHILE '(' . logic_stmt ')' block  (36)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	logic_stmt  goto 87
	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 82
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 32
	loop_stmt : FOR '(' . for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block  (37)
	for_1_stmt : .  (38)

	IDENTIFIER  shift 88
	INC_OP  shift 38
	DEC_OP  shift 39
	';'  reduce 38

	var_declar_stmt  goto 89
	for_1_stmt  goto 90
	assign_stmt  goto 91
	self_inc_dec_stmt  goto 92
	single_assign_stmt  goto 22
	id_expr  goto 93


state 33
	simple_stmt : DELETE IDENTIFIER . ';'  (44)

	';'  shift 94
	.  error


state 34
	double_expr : TDOUBLE .  (76)

	.  reduce 76


state 35
	t_bool_expr : TBOOL .  (75)

	.  reduce 75


state 36
	call_statement : IDENTIFIER . '(' args_list ')'  (49)
	id_expr : IDENTIFIER .  (74)

	'('  shift 28
	AND_OP  reduce 74
	OR_OP  reduce 74
	LE_OP  reduce 74
	GE_OP  reduce 74
	EQ_OP  reduce 74
	NE_OP  reduce 74
	INC_OP  reduce 74
	DEC_OP  reduce 74
	','  reduce 74
	'='  reduce 74
	'>'  reduce 74
	'<'  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'*'  reduce 74
	'/'  reduce 74
	';'  reduce 74
	')'  reduce 74


state 37
	string_expr : TSTRING .  (78)

	.  reduce 78


state 38
	self_inc_dec_stmt : INC_OP . id_expr  (90)

	IDENTIFIER  shift 88
	.  error

	id_expr  goto 95


state 39
	self_inc_dec_stmt : DEC_OP . id_expr  (91)

	IDENTIFIER  shift 88
	.  error

	id_expr  goto 96


state 40
	uminus_expr : '-' . double_or_ps_expr  (77)

	TDOUBLE  shift 34
	'('  shift 97
	.  error

	double_or_ps_expr  goto 98
	parentheses_stmt  goto 99
	double_expr  goto 100


state 41
	arithmetic_stmt_factor : '(' . arithmetic_stmt ')'  (73)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 101
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 45
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 42
	arithmetic_stmt_factor : arithmetic_stmt .  (72)
	assign_stmt_value : arithmetic_stmt .  (97)

	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	';'  reduce 97
	')'  reduce 97


state 43
	assign_stmt_value : self_inc_dec_stmt .  (101)
	assign_stmt_value_eq : self_inc_dec_stmt .  (106)

	'+'  reduce 106
	'-'  reduce 106
	'*'  reduce 106
	'/'  reduce 106
	';'  reduce 101
	')'  reduce 101


state 44
	assign_stmt_value : call_statement .  (98)
	assign_stmt_value_eq : call_statement .  (104)

	'+'  reduce 104
	'-'  reduce 104
	'*'  reduce 104
	'/'  reduce 104
	';'  reduce 98
	')'  reduce 98


state 45
	arithmetic_stmt_factor : assign_stmt_value_eq .  (70)

	.  reduce 70


state 46
	interrupt_stmt : RETURN assign_stmt_value .  (48)

	.  reduce 48


state 47
	self_inc_dec_stmt : id_expr . INC_OP  (92)
	self_inc_dec_stmt : id_expr . DEC_OP  (93)
	assign_stmt_value : id_expr .  (99)
	assign_stmt_value_eq : id_expr .  (105)

	INC_OP  shift 102
	DEC_OP  shift 103
	'+'  reduce 105
	'-'  reduce 105
	'*'  reduce 105
	'/'  reduce 105
	';'  reduce 99


state 48
	assign_stmt_value : t_bool_expr .  (96)

	.  reduce 96


state 49
	assign_stmt_value : double_expr .  (94)
	assign_stmt_value_eq : double_expr .  (102)

	'+'  reduce 102
	'-'  reduce 102
	'*'  reduce 102
	'/'  reduce 102
	';'  reduce 94
	')'  reduce 94


state 50
	assign_stmt_value : uminus_expr .  (95)
	assign_stmt_value_eq : uminus_expr .  (103)

	'+'  reduce 103
	'-'  reduce 103
	'*'  reduce 103
	'/'  reduce 103
	';'  reduce 95
	')'  reduce 95


state 51
	arithmetic_stmt_factor : string_expr .  (71)
	assign_stmt_value : string_expr .  (100)

	'+'  reduce 71
	'-'  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	';'  reduce 100
	')'  reduce 100


state 52
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (66)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (67)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (68)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (69)

	'+'  shift 104
	'-'  shift 105
	'*'  shift 106
	'/'  shift 107
	.  error


state 53
	selection_stmt : SWITCH '(' . id_expr ')' '{' case_stmt_list '}'  (31)

	IDENTIFIER  shift 88
	.  error

	id_expr  goto 108


state 54
	statement : simple_stmt ';' .  (7)

	.  reduce 7


state 55
	assign_stmt : id_expr ADD_EQ . assign_stmt_value_eq  (110)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	.  error

	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 109
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85


state 56
	assign_stmt : id_expr SUB_EQ . assign_stmt_value_eq  (111)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	.  error

	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 110
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85


state 57
	assign_stmt : id_expr MUL_EQ . assign_stmt_value_eq  (112)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	.  error

	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 111
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85


state 58
	assign_stmt : id_expr DIV_EQ . assign_stmt_value_eq  (113)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	.  error

	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 112
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85


state 59
	var_declar_stmt : id_expr ',' . var_declar_stmt  (26)

	IDENTIFIER  shift 88
	.  error

	var_declar_stmt  goto 113
	id_expr  goto 114


state 60
	single_assign_stmt : id_expr '=' . assign_stmt_value  (107)
	single_assign_stmt : id_expr '=' . single_assign_stmt  (108)

	TDOUBLE  shift 34
	TBOOL  shift 35
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 42
	self_inc_dec_stmt  goto 43
	call_statement  goto 44
	assign_stmt_value_eq  goto 45
	assign_stmt_value  goto 115
	single_assign_stmt  goto 116
	id_expr  goto 117
	t_bool_expr  goto 48
	double_expr  goto 49
	uminus_expr  goto 50
	string_expr  goto 51
	arithmetic_stmt_factor  goto 52


state 61
	var_declar_stmt : id_expr ';' .  (25)

	.  reduce 25


state 62
	param_list : '(' . parameter ')'  (19)
	parameter : .  (22)

	IDENTIFIER  shift 118
	','  reduce 22
	')'  reduce 22

	parameter  goto 119


state 63
	func_declar_stmt : IDENTIFIER FUNC_OP param_list . '{' expr_list '}'  (17)

	'{'  shift 120
	.  error


state 64
	class_body_stmt : IDENTIFIER . ';'  (16)

	';'  shift 121
	.  error


state 65
	class_body_stmt_list : class_body_stmt .  (15)

	.  reduce 15


state 66
	class_body : '{' class_body_stmt_list . '}'  (12)
	class_body_stmt_list : class_body_stmt_list . class_body_stmt  (14)

	IDENTIFIER  shift 64
	'}'  shift 122
	.  error

	class_body_stmt  goto 123


state 67
	args_expr_collection : arithmetic_stmt .  (60)
	arithmetic_stmt_factor : arithmetic_stmt .  (72)

	','  reduce 60
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	')'  reduce 60


state 68
	assign_stmt_value_eq : self_inc_dec_stmt .  (106)

	.  reduce 106


state 69
	args_expr_collection : call_statement .  (59)
	assign_stmt_value_eq : call_statement .  (104)

	','  reduce 59
	'+'  reduce 104
	'-'  reduce 104
	'*'  reduce 104
	'/'  reduce 104
	')'  reduce 59


state 70
	args_expr : args_expr_collection .  (52)

	.  reduce 52


state 71
	args_expr_collection : id_expr .  (56)
	self_inc_dec_stmt : id_expr . INC_OP  (92)
	self_inc_dec_stmt : id_expr . DEC_OP  (93)
	assign_stmt_value_eq : id_expr .  (105)

	INC_OP  shift 102
	DEC_OP  shift 103
	','  reduce 56
	'+'  reduce 105
	'-'  reduce 105
	'*'  reduce 105
	'/'  reduce 105
	')'  reduce 56


state 72
	args_expr_collection : t_bool_expr .  (54)

	.  reduce 54


state 73
	args_expr_collection : double_expr .  (55)
	assign_stmt_value_eq : double_expr .  (102)

	','  reduce 55
	'+'  reduce 102
	'-'  reduce 102
	'*'  reduce 102
	'/'  reduce 102
	')'  reduce 55


state 74
	args_expr_collection : uminus_expr .  (58)
	assign_stmt_value_eq : uminus_expr .  (103)

	','  reduce 58
	'+'  reduce 103
	'-'  reduce 103
	'*'  reduce 103
	'/'  reduce 103
	')'  reduce 58


state 75
	args_expr_collection : string_expr .  (57)
	arithmetic_stmt_factor : string_expr .  (71)

	','  reduce 57
	'+'  reduce 71
	'-'  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	')'  reduce 57


state 76
	call_statement : IDENTIFIER '(' args_list . ')'  (49)

	')'  shift 124
	.  error


state 77
	args_list : args_expr .  (51)
	args_expr : args_expr . ',' args_expr_collection  (53)

	','  shift 125
	')'  reduce 51


state 78
	selection_stmt : IF '(' logic_stmt . ')' block  (29)
	selection_stmt : IF '(' logic_stmt . ')' block ELSE block  (30)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (88)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (89)

	AND_OP  shift 126
	OR_OP  shift 127
	')'  shift 128
	.  error


state 79
	arithmetic_stmt_factor : arithmetic_stmt .  (72)
	bool_param_expr : arithmetic_stmt .  (80)

	AND_OP  reduce 80
	OR_OP  reduce 80
	LE_OP  reduce 80
	GE_OP  reduce 80
	EQ_OP  reduce 80
	NE_OP  reduce 80
	'>'  reduce 80
	'<'  reduce 80
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	';'  reduce 80
	')'  reduce 80


state 80
	assign_stmt_value_eq : call_statement .  (104)

	.  reduce 104


state 81
	arithmetic_stmt_factor : assign_stmt_value_eq .  (70)
	bool_param_expr : assign_stmt_value_eq .  (79)

	AND_OP  reduce 79
	OR_OP  reduce 79
	LE_OP  reduce 79
	GE_OP  reduce 79
	EQ_OP  reduce 79
	NE_OP  reduce 79
	'>'  reduce 79
	'<'  reduce 79
	'+'  reduce 70
	'-'  reduce 70
	'*'  reduce 70
	'/'  reduce 70
	';'  reduce 79
	')'  reduce 79


state 82
	logic_stmt : bool_param_expr .  (81)
	logic_stmt : bool_param_expr . '>' bool_param_expr  (82)
	logic_stmt : bool_param_expr . '<' bool_param_expr  (83)
	logic_stmt : bool_param_expr . LE_OP bool_param_expr  (84)
	logic_stmt : bool_param_expr . GE_OP bool_param_expr  (85)
	logic_stmt : bool_param_expr . EQ_OP bool_param_expr  (86)
	logic_stmt : bool_param_expr . NE_OP bool_param_expr  (87)

	LE_OP  shift 129
	GE_OP  shift 130
	EQ_OP  shift 131
	NE_OP  shift 132
	'>'  shift 133
	'<'  shift 134
	AND_OP  reduce 81
	OR_OP  reduce 81
	';'  reduce 81
	')'  reduce 81


state 83
	self_inc_dec_stmt : id_expr . INC_OP  (92)
	self_inc_dec_stmt : id_expr . DEC_OP  (93)
	assign_stmt_value_eq : id_expr .  (105)

	INC_OP  shift 102
	DEC_OP  shift 103
	AND_OP  reduce 105
	OR_OP  reduce 105
	LE_OP  reduce 105
	GE_OP  reduce 105
	EQ_OP  reduce 105
	NE_OP  reduce 105
	','  reduce 105
	'>'  reduce 105
	'<'  reduce 105
	'+'  reduce 105
	'-'  reduce 105
	'*'  reduce 105
	'/'  reduce 105
	';'  reduce 105
	')'  reduce 105


state 84
	assign_stmt_value_eq : double_expr .  (102)

	.  reduce 102


state 85
	assign_stmt_value_eq : uminus_expr .  (103)

	.  reduce 103


state 86
	arithmetic_stmt_factor : string_expr .  (71)

	.  reduce 71


state 87
	loop_stmt : WHILE '(' logic_stmt . ')' block  (36)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (88)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (89)

	AND_OP  shift 126
	OR_OP  shift 127
	')'  shift 135
	.  error


state 88
	id_expr : IDENTIFIER .  (74)

	.  reduce 74


state 89
	for_1_stmt : var_declar_stmt .  (40)

	.  reduce 40


state 90
	loop_stmt : FOR '(' for_1_stmt . ';' logic_stmt ';' for_1_stmt ')' block  (37)

	';'  shift 136
	.  error


state 91
	for_1_stmt : assign_stmt .  (39)

	.  reduce 39


state 92
	for_1_stmt : self_inc_dec_stmt .  (41)

	.  reduce 41


state 93
	var_declar_stmt : id_expr . ';'  (25)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (26)
	self_inc_dec_stmt : id_expr . INC_OP  (92)
	self_inc_dec_stmt : id_expr . DEC_OP  (93)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (107)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (108)
	assign_stmt : id_expr . ADD_EQ assign_stmt_value_eq  (110)
	assign_stmt : id_expr . SUB_EQ assign_stmt_value_eq  (111)
	assign_stmt : id_expr . MUL_EQ assign_stmt_value_eq  (112)
	assign_stmt : id_expr . DIV_EQ assign_stmt_value_eq  (113)

	INC_OP  shift 102
	DEC_OP  shift 103
	ADD_EQ  shift 55
	SUB_EQ  shift 56
	MUL_EQ  shift 57
	DIV_EQ  shift 58
	','  shift 59
	'='  shift 60
	';'  shift 61
	.  error


state 94
	simple_stmt : DELETE IDENTIFIER ';' .  (44)

	.  reduce 44


state 95
	self_inc_dec_stmt : INC_OP id_expr .  (90)

	.  reduce 90


state 96
	self_inc_dec_stmt : DEC_OP id_expr .  (91)

	.  reduce 91


state 97
	parentheses_stmt : '(' . assign_stmt_value_eq ')'  (65)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	.  error

	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 137
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85


state 98
	uminus_expr : '-' double_or_ps_expr .  (77)

	.  reduce 77


state 99
	double_or_ps_expr : parentheses_stmt .  (64)

	.  reduce 64


state 100
	double_or_ps_expr : double_expr .  (63)

	.  reduce 63


state 101
	arithmetic_stmt_factor : arithmetic_stmt .  (72)
	arithmetic_stmt_factor : '(' arithmetic_stmt . ')'  (73)

	')'  shift 138
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72


state 102
	self_inc_dec_stmt : id_expr INC_OP .  (92)

	.  reduce 92


state 103
	self_inc_dec_stmt : id_expr DEC_OP .  (93)

	.  reduce 93


state 104
	arithmetic_stmt : arithmetic_stmt_factor '+' . arithmetic_stmt_factor  (66)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 139
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 45
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 140


state 105
	arithmetic_stmt : arithmetic_stmt_factor '-' . arithmetic_stmt_factor  (67)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 139
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 45
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 141


state 106
	arithmetic_stmt : arithmetic_stmt_factor '*' . arithmetic_stmt_factor  (68)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 139
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 45
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 142


state 107
	arithmetic_stmt : arithmetic_stmt_factor '/' . arithmetic_stmt_factor  (69)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 139
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 45
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 143


state 108
	selection_stmt : SWITCH '(' id_expr . ')' '{' case_stmt_list '}'  (31)

	')'  shift 144
	.  error


state 109
	assign_stmt : id_expr ADD_EQ assign_stmt_value_eq .  (110)

	.  reduce 110


state 110
	assign_stmt : id_expr SUB_EQ assign_stmt_value_eq .  (111)

	.  reduce 111


state 111
	assign_stmt : id_expr MUL_EQ assign_stmt_value_eq .  (112)

	.  reduce 112


state 112
	assign_stmt : id_expr DIV_EQ assign_stmt_value_eq .  (113)

	.  reduce 113


state 113
	var_declar_stmt : id_expr ',' var_declar_stmt .  (26)

	.  reduce 26


state 114
	var_declar_stmt : id_expr . ';'  (25)
	var_declar_stmt : id_expr . ',' var_declar_stmt  (26)

	','  shift 59
	';'  shift 61
	.  error


state 115
	single_assign_stmt : id_expr '=' assign_stmt_value .  (107)

	.  reduce 107


state 116
	single_assign_stmt : id_expr '=' single_assign_stmt .  (108)

	.  reduce 108


state 117
	self_inc_dec_stmt : id_expr . INC_OP  (92)
	self_inc_dec_stmt : id_expr . DEC_OP  (93)
	assign_stmt_value : id_expr .  (99)
	assign_stmt_value_eq : id_expr .  (105)
	single_assign_stmt : id_expr . '=' assign_stmt_value  (107)
	single_assign_stmt : id_expr . '=' single_assign_stmt  (108)

	INC_OP  shift 102
	DEC_OP  shift 103
	'='  shift 60
	'+'  reduce 105
	'-'  reduce 105
	'*'  reduce 105
	'/'  reduce 105
	';'  reduce 99
	')'  reduce 99


state 118
	parameter : IDENTIFIER .  (20)

	.  reduce 20


state 119
	param_list : '(' parameter . ')'  (19)
	parameter : parameter . ',' IDENTIFIER  (21)

	','  shift 145
	')'  shift 146
	.  error


state 120
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' . expr_list '}'  (17)
	expr_list : .  (24)

	.  reduce 24

	expr_list  goto 147


state 121
	class_body_stmt : IDENTIFIER ';' .  (16)

	.  reduce 16


state 122
	class_body : '{' class_body_stmt_list '}' .  (12)

	.  reduce 12


state 123
	class_body_stmt_list : class_body_stmt_list class_body_stmt .  (14)

	.  reduce 14


state 124
	call_statement : IDENTIFIER '(' args_list ')' .  (49)

	.  reduce 49


state 125
	args_expr : args_expr ',' . args_expr_collection  (53)

	TDOUBLE  shift 34
	TBOOL  shift 35
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 67
	self_inc_dec_stmt  goto 68
	call_statement  goto 69
	args_expr_collection  goto 148
	assign_stmt_value_eq  goto 45
	id_expr  goto 71
	t_bool_expr  goto 72
	double_expr  goto 73
	uminus_expr  goto 74
	string_expr  goto 75
	arithmetic_stmt_factor  goto 52


state 126
	logic_stmt : logic_stmt AND_OP . logic_stmt  (88)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	logic_stmt  goto 149
	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 82
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 127
	logic_stmt : logic_stmt OR_OP . logic_stmt  (89)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	logic_stmt  goto 150
	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 82
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 128
	selection_stmt : IF '(' logic_stmt ')' . block  (29)
	selection_stmt : IF '(' logic_stmt ')' . block ELSE block  (30)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 151
	.  error

	statement  goto 152
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 153
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 129
	logic_stmt : bool_param_expr LE_OP . bool_param_expr  (84)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 154
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 130
	logic_stmt : bool_param_expr GE_OP . bool_param_expr  (85)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 155
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 131
	logic_stmt : bool_param_expr EQ_OP . bool_param_expr  (86)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 156
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 132
	logic_stmt : bool_param_expr NE_OP . bool_param_expr  (87)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 157
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 133
	logic_stmt : bool_param_expr '>' . bool_param_expr  (82)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 158
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 134
	logic_stmt : bool_param_expr '<' . bool_param_expr  (83)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 159
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 135
	loop_stmt : WHILE '(' logic_stmt ')' . block  (36)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 151
	.  error

	statement  goto 152
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 160
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 136
	loop_stmt : FOR '(' for_1_stmt ';' . logic_stmt ';' for_1_stmt ')' block  (37)

	TDOUBLE  shift 34
	IDENTIFIER  shift 36
	TSTRING  shift 37
	INC_OP  shift 38
	DEC_OP  shift 39
	'-'  shift 40
	'('  shift 41
	.  error

	logic_stmt  goto 161
	arithmetic_stmt  goto 79
	self_inc_dec_stmt  goto 68
	call_statement  goto 80
	assign_stmt_value_eq  goto 81
	bool_param_expr  goto 82
	id_expr  goto 83
	double_expr  goto 84
	uminus_expr  goto 85
	string_expr  goto 86
	arithmetic_stmt_factor  goto 52


state 137
	parentheses_stmt : '(' assign_stmt_value_eq . ')'  (65)

	')'  shift 162
	.  error


state 138
	arithmetic_stmt_factor : '(' arithmetic_stmt ')' .  (73)

	.  reduce 73


state 139
	arithmetic_stmt_factor : arithmetic_stmt .  (72)

	.  reduce 72


state 140
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (66)
	arithmetic_stmt : arithmetic_stmt_factor '+' arithmetic_stmt_factor .  (66)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (67)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (68)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (69)

	'*'  shift 106
	'/'  shift 107
	AND_OP  reduce 66
	OR_OP  reduce 66
	LE_OP  reduce 66
	GE_OP  reduce 66
	EQ_OP  reduce 66
	NE_OP  reduce 66
	','  reduce 66
	'>'  reduce 66
	'<'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	';'  reduce 66
	')'  reduce 66


state 141
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (66)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (67)
	arithmetic_stmt : arithmetic_stmt_factor '-' arithmetic_stmt_factor .  (67)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (68)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (69)

	'*'  shift 106
	'/'  shift 107
	AND_OP  reduce 67
	OR_OP  reduce 67
	LE_OP  reduce 67
	GE_OP  reduce 67
	EQ_OP  reduce 67
	NE_OP  reduce 67
	','  reduce 67
	'>'  reduce 67
	'<'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	';'  reduce 67
	')'  reduce 67


state 142
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (66)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (67)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (68)
	arithmetic_stmt : arithmetic_stmt_factor '*' arithmetic_stmt_factor .  (68)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (69)

	.  reduce 68


state 143
	arithmetic_stmt : arithmetic_stmt_factor . '+' arithmetic_stmt_factor  (66)
	arithmetic_stmt : arithmetic_stmt_factor . '-' arithmetic_stmt_factor  (67)
	arithmetic_stmt : arithmetic_stmt_factor . '*' arithmetic_stmt_factor  (68)
	arithmetic_stmt : arithmetic_stmt_factor . '/' arithmetic_stmt_factor  (69)
	arithmetic_stmt : arithmetic_stmt_factor '/' arithmetic_stmt_factor .  (69)

	.  reduce 69


state 144
	selection_stmt : SWITCH '(' id_expr ')' . '{' case_stmt_list '}'  (31)

	'{'  shift 163
	.  error


state 145
	parameter : parameter ',' . IDENTIFIER  (21)

	IDENTIFIER  shift 164
	.  error


state 146
	param_list : '(' parameter ')' .  (19)

	.  reduce 19


state 147
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list . '}'  (17)
	expr_list : expr_list . statement  (23)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 165
	.  error

	statement  goto 166
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 148
	args_expr : args_expr ',' args_expr_collection .  (53)

	.  reduce 53


state 149
	logic_stmt : logic_stmt . AND_OP logic_stmt  (88)
	logic_stmt : logic_stmt AND_OP logic_stmt .  (88)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (89)

	.  reduce 88


state 150
	logic_stmt : logic_stmt . AND_OP logic_stmt  (88)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (89)
	logic_stmt : logic_stmt OR_OP logic_stmt .  (89)

	.  reduce 89


state 151
	block : '{' . expr_list '}'  (61)
	expr_list : .  (24)

	.  reduce 24

	expr_list  goto 167


state 152
	block : statement .  (62)

	.  reduce 62


state 153
	selection_stmt : IF '(' logic_stmt ')' block .  (29)
	selection_stmt : IF '(' logic_stmt ')' block . ELSE block  (30)

	ELSE  shift 168
	$end  reduce 29
	IDENTIFIER  reduce 29
	IF  reduce 29
	WHILE  reduce 29
	FOR  reduce 29
	DELETE  reduce 29
	BREAK  reduce 29
	RETURN  reduce 29
	SWITCH  reduce 29
	CASE  reduce 29
	DEFAULT  reduce 29
	';'  reduce 29
	'}'  reduce 29


state 154
	logic_stmt : bool_param_expr LE_OP bool_param_expr .  (84)

	.  reduce 84


state 155
	logic_stmt : bool_param_expr GE_OP bool_param_expr .  (85)

	.  reduce 85


state 156
	logic_stmt : bool_param_expr EQ_OP bool_param_expr .  (86)

	.  reduce 86


state 157
	logic_stmt : bool_param_expr NE_OP bool_param_expr .  (87)

	.  reduce 87


state 158
	logic_stmt : bool_param_expr '>' bool_param_expr .  (82)

	.  reduce 82


state 159
	logic_stmt : bool_param_expr '<' bool_param_expr .  (83)

	.  reduce 83


state 160
	loop_stmt : WHILE '(' logic_stmt ')' block .  (36)

	.  reduce 36


state 161
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt . ';' for_1_stmt ')' block  (37)
	logic_stmt : logic_stmt . AND_OP logic_stmt  (88)
	logic_stmt : logic_stmt . OR_OP logic_stmt  (89)

	AND_OP  shift 126
	OR_OP  shift 127
	';'  shift 169
	.  error


state 162
	parentheses_stmt : '(' assign_stmt_value_eq ')' .  (65)

	.  reduce 65


state 163
	selection_stmt : SWITCH '(' id_expr ')' '{' . case_stmt_list '}'  (31)

	CASE  shift 170
	DEFAULT  shift 171
	.  error

	case_stmt_list  goto 172
	case_stmt  goto 173


state 164
	parameter : parameter ',' IDENTIFIER .  (21)

	.  reduce 21


state 165
	func_declar_stmt : IDENTIFIER FUNC_OP param_list '{' expr_list '}' .  (17)

	.  reduce 17


state 166
	expr_list : expr_list statement .  (23)

	.  reduce 23


state 167
	expr_list : expr_list . statement  (23)
	block : '{' expr_list . '}'  (61)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'}'  shift 174
	.  error

	statement  goto 166
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 168
	selection_stmt : IF '(' logic_stmt ')' block ELSE . block  (30)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 151
	.  error

	statement  goto 152
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 175
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 169
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' . for_1_stmt ')' block  (37)
	for_1_stmt : .  (38)

	IDENTIFIER  shift 88
	INC_OP  shift 38
	DEC_OP  shift 39
	')'  reduce 38

	var_declar_stmt  goto 89
	for_1_stmt  goto 176
	assign_stmt  goto 91
	self_inc_dec_stmt  goto 92
	single_assign_stmt  goto 22
	id_expr  goto 93


state 170
	case_stmt : CASE . double_expr ':' expr_list  (34)

	TDOUBLE  shift 34
	.  error

	double_expr  goto 177


state 171
	case_stmt : DEFAULT . ':' expr_list  (35)

	':'  shift 178
	.  error


state 172
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list . '}'  (31)
	case_stmt_list : case_stmt_list . case_stmt  (33)

	CASE  shift 170
	DEFAULT  shift 171
	'}'  shift 179
	.  error

	case_stmt  goto 180


state 173
	case_stmt_list : case_stmt .  (32)

	.  reduce 32


state 174
	block : '{' expr_list '}' .  (61)

	.  reduce 61


state 175
	selection_stmt : IF '(' logic_stmt ')' block ELSE block .  (30)

	.  reduce 30


state 176
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt . ')' block  (37)

	')'  shift 181
	.  error


state 177
	case_stmt : CASE double_expr . ':' expr_list  (34)

	':'  shift 182
	.  error


state 178
	case_stmt : DEFAULT ':' . expr_list  (35)
	expr_list : .  (24)

	.  reduce 24

	expr_list  goto 183


state 179
	selection_stmt : SWITCH '(' id_expr ')' '{' case_stmt_list '}' .  (31)

	.  reduce 31


state 180
	case_stmt_list : case_stmt_list case_stmt .  (33)

	.  reduce 33


state 181
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' . block  (37)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	'{'  shift 151
	.  error

	statement  goto 152
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	block  goto 184
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 182
	case_stmt : CASE double_expr ':' . expr_list  (34)
	expr_list : .  (24)

	.  reduce 24

	expr_list  goto 185


state 183
	expr_list : expr_list . statement  (23)
	case_stmt : DEFAULT ':' expr_list .  (35)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	CASE  reduce 35
	DEFAULT  reduce 35
	'}'  reduce 35

	statement  goto 166
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


state 184
	loop_stmt : FOR '(' for_1_stmt ';' logic_stmt ';' for_1_stmt ')' block .  (37)

	.  reduce 37


state 185
	expr_list : expr_list . statement  (23)
	case_stmt : CASE double_expr ':' expr_list .  (34)

	IDENTIFIER  shift 3
	IF  shift 4
	WHILE  shift 5
	FOR  shift 6
	DELETE  shift 7
	BREAK  shift 8
	RETURN  shift 9
	SWITCH  shift 10
	';'  shift 11
	CASE  reduce 34
	DEFAULT  reduce 34
	'}'  reduce 34

	statement  goto 166
	declar_stmt  goto 13
	con_ctl_stmt  goto 14
	simple_stmt  goto 15
	func_declar_stmt  goto 16
	var_declar_stmt  goto 17
	selection_stmt  goto 18
	loop_stmt  goto 19
	assign_stmt  goto 20
	call_statement  goto 21
	single_assign_stmt  goto 22
	interrupt_stmt  goto 23
	id_expr  goto 24
	class_declar_stmt  goto 25


State 27 contains 1 shift/reduce conflict.


51 terminals, 43 nonterminals
114 grammar rules, 186 states
